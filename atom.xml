<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jozky Home</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://jozky.top/"/>
  <updated>2020-07-05T13:19:21.010Z</updated>
  <id>http://jozky.top/</id>
  
  <author>
    <name>Jozky</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Tr A HDU1575</title>
    <link href="http://jozky.top/2020/07/05/Tr-A-HDU1575/"/>
    <id>http://jozky.top/2020/07/05/Tr-A-HDU1575/</id>
    <published>2020-07-05T13:16:04.000Z</published>
    <updated>2020-07-05T13:19:21.010Z</updated>
    
    <content type="html"><![CDATA[<p>@[toc]<br><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1575" target="_blank" rel="noopener">Tr A HDU1575</a></p><h2 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h2><blockquote><p>A为一个方阵，则Tr A表示A的迹（就是主对角线上各项的和），现要求Tr(A^k)%9973。</p></blockquote><a id="more"></a> <p><strong>Input</strong></p><blockquote><p>数据的第一行是一个T，表示有T组数据。 每组数据的第一行有n(2 &lt;= n &lt;= 10)和k(2 &lt;= k &lt;<br>10^9)两个数据。接下来有n行，每行有n个数据，每个数据的范围是[0,9]，表示方阵A的内容。</p></blockquote><p><strong>Output</strong><br>对应每组数据，输出Tr(A^k)%9973。<br><strong>Sample Input</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="number">3</span> <span class="number">99999999</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">4</span> <span class="number">5</span> <span class="number">6</span></span><br><span class="line"><span class="number">7</span> <span class="number">8</span> <span class="number">9</span></span><br></pre></td></tr></table></figure><p><strong>Sample Output</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">2686</span></span><br></pre></td></tr></table></figure><h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><p>我一开始以为A^k^的意思是主对角线各项的k次方的和，发现我太天真了，正确的含义应该是矩阵A的k次幂，然后再求主对角线各项的和<br>用 矩阵快速幂 来做<br>也算是模板题把</p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 15</span></span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">matrix</span>//定义一个结构体，方便传递值</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> m[maxn][maxn];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">matrix <span class="title">mul</span><span class="params">(matrix a, matrix b)</span>    <span class="comment">//矩阵求积, 矩阵乘法</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    matrix ans;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            ans.m[i][j] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= n; k++)</span><br><span class="line">            &#123;</span><br><span class="line">                ans.m[i][j] += (a.m[i][k] * b.m[k][j]) % <span class="number">9973</span>;</span><br><span class="line">                ans.m[i][j] %= <span class="number">9973</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">matrix <span class="title">quick_pow</span><span class="params">(matrix a, <span class="keyword">int</span> b)</span>    <span class="comment">//矩阵快速幂</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    matrix ans;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i == j)</span><br><span class="line">                ans.m[i][j] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                ans.m[i][j] = <span class="number">0</span>;<span class="comment">//这里要初始化为单位矩阵，类比普通快速幂这里初始化为1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(b != <span class="number">0</span>)<span class="comment">//方法与普通快速幂相同，只有乘法的实现不同</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">            ans = mul(a, ans);</span><br><span class="line">        a = mul(a, a);</span><br><span class="line">        b /= <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        matrix a;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;= n; ++i)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j)</span><br><span class="line">                <span class="built_in">cin</span> &gt;&gt; a.m[i][j];</span><br><span class="line"></span><br><span class="line">        matrix tmp = quick_pow(a, k);</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;= n; ++i)</span><br><span class="line">            ans += tmp.m[i][i] % <span class="number">9973</span>;</span><br><span class="line"></span><br><span class="line">        ans %= <span class="number">9973</span>;    <span class="comment">// 最后这里一定要再次取余！</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;@[toc]&lt;br&gt;&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=1575&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Tr A HDU1575&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目：&quot;&gt;&lt;a href=&quot;#题目：&quot; class=&quot;headerlink&quot; title=&quot;题目：&quot;&gt;&lt;/a&gt;题目：&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;A为一个方阵，则Tr A表示A的迹（就是主对角线上各项的和），现要求Tr(A^k)%9973。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="题解" scheme="http://Jozky.top/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="数论" scheme="http://Jozky.top/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="矩阵快速幂" scheme="http://Jozky.top/tags/%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
    
  </entry>
  
  <entry>
    <title>C Looooops POJ - 2115</title>
    <link href="http://jozky.top/2020/07/05/C-Looooops-POJ-2115/"/>
    <id>http://jozky.top/2020/07/05/C-Looooops-POJ-2115/</id>
    <published>2020-07-05T13:15:54.000Z</published>
    <updated>2020-07-05T13:19:22.927Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://poj.org/problem?id=2115" target="_blank" rel="noopener">C Looooops POJ - 2115</a></p><h2 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h2><blockquote><p>A Compiler Mystery: We are given a C-language style for loop of type</p><figure class="highlight cpp"><figcaption><span>for (variable </span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">statement; </span><br></pre></td></tr></table></figure><p>I.e., a loop which starts by setting variable to value A and while<br>variable is not equal to B, repeats statement followed by increasing<br>the variable by C. We want to know how many times does the statement<br>get executed for particular values of A, B and C, assuming that all<br>arithmetics is calculated in a k-bit unsigned integer type (with<br>values 0 &lt;= x &lt; 2k) modulo 2k.</p></blockquote><a id="more"></a> <p><strong>Input</strong></p><blockquote><p>The input consists of several instances. Each instance is described by<br>a single line with four integers A, B, C, k separated by a single<br>space. The integer k (1 &lt;= k &lt;= 32) is the number of bits of the<br>control variable of the loop and A, B, C (0 &lt;= A, B, C &lt; 2k) are the<br>parameters of the loop.</p><p>The input is finished by a line containing four zeros.</p></blockquote><p><strong>Output</strong></p><blockquote><p>The output consists of several lines corresponding to the instances on<br>the input. The i-th line contains either the number of executions of<br>the statement in the i-th instance (a single integer number) or the<br>word FOREVER if the loop does not terminate.</p></blockquote><p><strong>Sample Input</strong><br>3 3 2 16<br>3 7 2 16<br>7 3 2 16<br>3 4 2 16<br>0 0 0 0<br><strong>Sample Output</strong><br>0<br>2<br>32766<br>FOREVER</p><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p>初始值为A，每次可以增加C，值要mod2^k^,问mod后的值如果等于B，增加了几次C，如果无法等于B输出FOREVER</p><h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><p>看一下我的推导：<br><img src="https://uploadfiles.nowcoder.com/files/20200705/543071257_1593953536536_202007052049339.png" alt="在这里插入图片描述"><br>你会发现其实就是扩展欧几里得的模板题，并求出最小正整数解<br>我们可以用 (x0 % b1 + b1 ) % b1得到它的最小正整数解了<br>此处x0= x * c / gcd(a,b)<br>详细证明看下面博客<br><a href="https://blog.csdn.net/qq_35975367/article/details/107072070" target="_blank" rel="noopener">扩展欧几里得讲解</a></p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;list&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function">ll <span class="title">exgcd</span><span class="params">(ll a,ll b,ll &amp;x,ll &amp;y)</span><span class="comment">//扩展欧几里得算法</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        x=<span class="number">1</span>;</span><br><span class="line">y=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;  <span class="comment">//到达递归边界开始向上一层返回</span></span><br><span class="line">    &#125;</span><br><span class="line">    ll gcd=exgcd(b,a%b,x,y);</span><br><span class="line">    ll y1=y;    <span class="comment">//把x y变成上一层的</span></span><br><span class="line">    ll x1=x;</span><br><span class="line">    y=x1-(a/b)*y1;</span><br><span class="line">    x=y1;</span><br><span class="line">    <span class="keyword">return</span> gcd;     <span class="comment">//得到a b的最大公因数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll A,B,C,K;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;A&gt;&gt;B&gt;&gt;C&gt;&gt;K)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(A==<span class="number">0</span>&amp;&amp;B==<span class="number">0</span>&amp;&amp;C==<span class="number">0</span>&amp;&amp;K==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">ll x,y;</span><br><span class="line">ll a=C;</span><br><span class="line">ll b=(ll)<span class="number">1</span>&lt;&lt;K;</span><br><span class="line">ll c=B-A;</span><br><span class="line">ll gcd=exgcd(a,b,x,y);</span><br><span class="line"><span class="keyword">if</span>(c%gcd!=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"FOREVER"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"> x=(x*(c/gcd))%b;</span><br><span class="line">             x=(x%(b/gcd)+b/gcd)%(b/gcd);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;x&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=2115&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;C Looooops POJ - 2115&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目：&quot;&gt;&lt;a href=&quot;#题目：&quot; class=&quot;headerlink&quot; title=&quot;题目：&quot;&gt;&lt;/a&gt;题目：&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;A Compiler Mystery: We are given a C-language style for loop of type&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;for (variable &lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;statement; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;I.e., a loop which starts by setting variable to value A and while&lt;br&gt;variable is not equal to B, repeats statement followed by increasing&lt;br&gt;the variable by C. We want to know how many times does the statement&lt;br&gt;get executed for particular values of A, B and C, assuming that all&lt;br&gt;arithmetics is calculated in a k-bit unsigned integer type (with&lt;br&gt;values 0 &amp;lt;= x &amp;lt; 2k) modulo 2k.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="题解" scheme="http://Jozky.top/categories/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="模板题" scheme="http://Jozky.top/categories/%E9%A2%98%E8%A7%A3/%E6%A8%A1%E6%9D%BF%E9%A2%98/"/>
    
    
      <category term="exgcd" scheme="http://Jozky.top/tags/exgcd/"/>
    
      <category term="数论" scheme="http://Jozky.top/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>小a的旅行计划</title>
    <link href="http://jozky.top/2020/07/05/%E5%B0%8Fa%E7%9A%84%E6%97%85%E8%A1%8C%E8%AE%A1%E5%88%92/"/>
    <id>http://jozky.top/2020/07/05/%E5%B0%8Fa%E7%9A%84%E6%97%85%E8%A1%8C%E8%AE%A1%E5%88%92/</id>
    <published>2020-07-05T13:15:48.000Z</published>
    <updated>2020-07-05T13:18:25.833Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://ac.nowcoder.com/acm/problem/20808" target="_blank" rel="noopener">来源：牛客网</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">时间限制：C/C++ <span class="number">1</span>秒，其他语言<span class="number">2</span>秒</span><br><span class="line">空间限制：C/C++ <span class="number">32768</span>K，其他语言<span class="number">65536</span>K</span><br><span class="line"><span class="number">64b</span>it IO Format: %lld</span><br></pre></td></tr></table></figure><p>@[toc]</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>小a终于放假了，它想在假期中去一些地方游玩，现在有N个景点，编号为1, 2, \dots<br>N1,2,…N，同时小b也想出去游玩。由于一些特殊♂原因，他们的旅行计划必须满足一些条件 首先，他们可以从这N个景点中任意选几个游玩<br>设小a选出的景点集合为A，小b选的景点集合为B，则需要满足</p><ol><li>A,B的交集不能为空集</li><li>A,B不能相互包含(A=B也属于相互包含) 注意：在这里我们认为(A,B)是无序的，即(A,B)和(B,A)是同一种方案</li></ol></blockquote><a id="more"></a> <p><strong>输入描述:</strong><br>一个整数N表示景点的数量<br><strong>输出描述:</strong><br>一个整数表示方案数，答案对10^8^ + 7取模<br>示例1<br>输入</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><p>说明<br>合法的方案如下：<br>小a：(1, 2) 小b： (2, 3)<br>小a：(1, 3) 小b： (2, 3)<br>小a：(1, 2) 小b： (1, 3)<br>示例2<br>输入<br>复制</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><p>输出<br>复制</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">30</span></span><br></pre></td></tr></table></figure><p>示例3<br>输入<br>复制</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><p>输出<br>复制</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><p>示例4<br>输入<br>复制</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10000</span></span><br></pre></td></tr></table></figure><p>输出<br>复制</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">68735934</span></span><br></pre></td></tr></table></figure><p>示例5<br>输入</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><p>备注:<br>对于100%的数据1⩽n⩽10 ^13^</p><h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><p><a href="https://blog.csdn.net/weixin_42757232/article/details/89702769" target="_blank" rel="noopener">解题思路来自</a><br>我们整合一下题目的条件可以得到，A和B都至少有两个元素，且最少有一个相同，至少有一个不同<br>一共n的元素，我们可以先选出A的元素，然后在A中选一些元素作为公共元素，然后在A未选的元素中选择给B<br>可以得到公式<br><img src="https://uploadfiles.nowcoder.com/files/20200704/543071257_1593829203785_20200704100610423.png" alt="在这里插入图片描述"><br>我们注意到公式中存在除法操作，且我们需要mod，所以用逆元来算<br><a href="https://blog.csdn.net/qq_35975367/article/details/107119628" target="_blank" rel="noopener">求逆元的方法：</a></p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e8</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function">ll <span class="title">exgcd</span><span class="params">(ll a,ll b,ll &amp;x,ll &amp;y)</span><span class="comment">//扩展欧几里得算法</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        x=<span class="number">1</span>;</span><br><span class="line">y=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;  <span class="comment">//到达递归边界开始向上一层返回</span></span><br><span class="line">    &#125;</span><br><span class="line">    ll gcd=exgcd(b,a%b,x,y);</span><br><span class="line">    ll y1=y;    <span class="comment">//把x y变成上一层的</span></span><br><span class="line">    ll x1=x;</span><br><span class="line">    y=x1-(a/b)*y1;</span><br><span class="line">    x=y1;</span><br><span class="line">    <span class="keyword">return</span> gcd;     <span class="comment">//得到a b的最大公因数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">inv</span><span class="params">(ll a,ll mod)</span></span>&#123;</span><br><span class="line">ll x,y;</span><br><span class="line">ll gcd=exgcd(a,mod,x,y);</span><br><span class="line"><span class="keyword">if</span>(gcd!=<span class="number">1</span>)<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> (x+mod)%mod; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">poww</span><span class="params">(ll a,ll b)</span></span>&#123;</span><br><span class="line">ll ans=<span class="number">1</span>;</span><br><span class="line">ll base=a%mod;</span><br><span class="line"><span class="keyword">while</span>(b)&#123;</span><br><span class="line"><span class="keyword">if</span>(b&amp;<span class="number">1</span>)ans=ans*base%mod;</span><br><span class="line">base=base*base%mod;</span><br><span class="line">b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//ll inv(ll a,ll mod)&#123;</span></span><br><span class="line"><span class="comment">//return poww(a,mod-2);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="comment">//cout&lt;&lt;poww(2,3)&lt;&lt;endl;</span></span><br><span class="line">ll ans1=((poww(<span class="number">4</span>,n)<span class="number">-1</span>)-(poww(<span class="number">3</span>,n+<span class="number">1</span>))+mod)%mod;</span><br><span class="line">    ll ans2=<span class="number">3</span>*poww(<span class="number">2</span>,n<span class="number">-1</span>)%mod;</span><br><span class="line">    ll ans3=inv(<span class="number">2</span>,mod)%mod;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;(ans1*ans3+ans2)%mod;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/problem/20808&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;来源：牛客网&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;时间限制：C/C++ &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;秒，其他语言&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;秒&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;空间限制：C/C++ &lt;span class=&quot;number&quot;&gt;32768&lt;/span&gt;K，其他语言&lt;span class=&quot;number&quot;&gt;65536&lt;/span&gt;K&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;64b&lt;/span&gt;it IO Format: %lld&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;@[toc]&lt;/p&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;小a终于放假了，它想在假期中去一些地方游玩，现在有N个景点，编号为1, 2, \dots&lt;br&gt;N1,2,…N，同时小b也想出去游玩。由于一些特殊♂原因，他们的旅行计划必须满足一些条件 首先，他们可以从这N个景点中任意选几个游玩&lt;br&gt;设小a选出的景点集合为A，小b选的景点集合为B，则需要满足&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A,B的交集不能为空集&lt;/li&gt;
&lt;li&gt;A,B不能相互包含(A=B也属于相互包含) 注意：在这里我们认为(A,B)是无序的，即(A,B)和(B,A)是同一种方案&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="题解" scheme="http://Jozky.top/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="数论" scheme="http://Jozky.top/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="逆元" scheme="http://Jozky.top/tags/%E9%80%86%E5%85%83/"/>
    
      <category term="二项式定理" scheme="http://Jozky.top/tags/%E4%BA%8C%E9%A1%B9%E5%BC%8F%E5%AE%9A%E7%90%86/"/>
    
      <category term="组合数" scheme="http://Jozky.top/tags/%E7%BB%84%E5%90%88%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>逆元的求法</title>
    <link href="http://jozky.top/2020/07/04/%E9%80%86%E5%85%83%E7%9A%84%E6%B1%82%E6%B3%95/"/>
    <id>http://jozky.top/2020/07/04/%E9%80%86%E5%85%83%E7%9A%84%E6%B1%82%E6%B3%95/</id>
    <published>2020-07-04T01:32:48.000Z</published>
    <updated>2020-07-04T01:35:42.022Z</updated>
    
    <content type="html"><![CDATA[<p>逆元：<br>对于a和p，若 a * inv(a) % p ≡ 1，则称inv(a)为a%p的逆元。其中p为质数<br>逆元就是在mod下，不能直接除以一个数，而要乘以他的逆元<br>a * inv(a) = 1 (mod p)<br>x / a可以改成 x * inv(a) % p</p><a id="more"></a> <p>@[toc]</p><h2 id="方法一-扩展欧几里得"><a href="#方法一-扩展欧几里得" class="headerlink" title="方法一.扩展欧几里得"></a>方法一.扩展欧几里得</h2><p>a * inv(a) = 1 (mod p)<br>可以变形成 a * inv(a) +k * p = 1(前提是a和p要互素)<br>可以用扩欧的公式来计算<br>时间复杂度:O(logn)<br>适用范围：只要存在逆元即可求，适用于个数不多但是mod很大的时候，也是最常见的一种求逆元的方法。</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ll <span class="title">exgcd</span><span class="params">(ll a,ll b,ll &amp;x,ll &amp;y)</span><span class="comment">//扩展欧几里得算法</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        x=<span class="number">1</span>;</span><br><span class="line">y=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;  <span class="comment">//到达递归边界开始向上一层返回</span></span><br><span class="line">    &#125;</span><br><span class="line">    ll gcd=exgcd(b,a%b,x,y);</span><br><span class="line">    ll y1=y;    <span class="comment">//把x y变成上一层的</span></span><br><span class="line">    ll x1=x;</span><br><span class="line">    y=x1-(a/b)*y1;</span><br><span class="line">    x=y1;</span><br><span class="line">    <span class="keyword">return</span> gcd;     <span class="comment">//得到a b的最大公因数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">inv</span><span class="params">(ll a,ll mod)</span></span>&#123;</span><br><span class="line">ll x,y;</span><br><span class="line">ll gcd=exgcd(a,mod,x,y);</span><br><span class="line"><span class="keyword">if</span>(gcd!=<span class="number">1</span>)<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> (x+mod)%mod; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法二-费马小定理-欧拉定理"><a href="#方法二-费马小定理-欧拉定理" class="headerlink" title="方法二.费马小定理+欧拉定理"></a>方法二.费马小定理+欧拉定理</h2><p>费马小定理：假如p是质数，且gcd(a,p)=1，那么 a^(p-1)^ ≡ 1（mod p），进一步可以推出a^p-2^ * a ≡ 1 (mod p)<br>a^p-2^就是a在mod p意义下的逆元<br>欧拉函数：a^φ(n)^≡1 (mod n) ，其中 gcd(a,n)=1<br>若n为素数，φ(n)=n-1<br>时间复杂度 O(log mod)<br>适用范围：在mod是素数的时候使用，比扩欧快</p><h3 id="代码：-1"><a href="#代码：-1" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ll <span class="title">poww</span><span class="params">(ll a,ll b,ll mod)</span></span>&#123;</span><br><span class="line">ll ans=<span class="number">1</span>;</span><br><span class="line">ll base=a;</span><br><span class="line"><span class="keyword">while</span>(b)&#123;</span><br><span class="line"><span class="keyword">if</span>(b&amp;<span class="number">1</span>)ans=ans*base%mod;</span><br><span class="line">base=base*base%mod;</span><br><span class="line">b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">inv</span><span class="params">(ll a,ll mod)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> poww(a,mod<span class="number">-2</span>,mod);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法三-递推求逆元"><a href="#方法三-递推求逆元" class="headerlink" title="方法三:递推求逆元"></a>方法三:递推求逆元</h2><p>时间复杂度为O（n）<br>使用条件：mod为不是很大的素数，且需要多次调用</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> inv[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> n,<span class="keyword">long</span> <span class="keyword">long</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">inv[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">inv[i]=((p-p/i)*inv[p%i]%p);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;逆元：&lt;br&gt;对于a和p，若 a * inv(a) % p ≡ 1，则称inv(a)为a%p的逆元。其中p为质数&lt;br&gt;逆元就是在mod下，不能直接除以一个数，而要乘以他的逆元&lt;br&gt;a * inv(a) = 1 (mod p)&lt;br&gt;x / a可以改成 x * inv(a) % p&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://Jozky.top/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数论" scheme="http://Jozky.top/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="逆元" scheme="http://Jozky.top/tags/%E9%80%86%E5%85%83/"/>
    
  </entry>
  
  <entry>
    <title>序列求和</title>
    <link href="http://jozky.top/2020/07/03/%E5%BA%8F%E5%88%97%E6%B1%82%E5%92%8C/"/>
    <id>http://jozky.top/2020/07/03/%E5%BA%8F%E5%88%97%E6%B1%82%E5%92%8C/</id>
    <published>2020-07-03T14:20:20.000Z</published>
    <updated>2020-07-03T14:21:14.107Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://ac.nowcoder.com/acm/problem/15950" target="_blank" rel="noopener">来源：牛客网</a><br>@[toc]</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">时间限制：C/C++ <span class="number">1</span>秒，其他语言<span class="number">2</span>秒</span><br><span class="line">空间限制：C/C++ <span class="number">131072</span>K，其他语言<span class="number">262144</span>K</span><br><span class="line"><span class="number">64b</span>it IO Format: %lld</span><br></pre></td></tr></table></figure><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>定义S(n) = 12 + 22 + … + n2，输出S(n) % 1000000007。</p><p>注意：1 &lt; n &lt; 1e18。</p></blockquote><a id="more"></a> <p><strong>输入描述:</strong></p><blockquote><p>多组输入，输入直到遇到EOF为止；</p><p>第一行输入一个正整数n。</p></blockquote><p><strong>输出描述:</strong></p><blockquote><p>输出S(n) % 1000000007的结果。</p></blockquote><p><strong>示例1</strong><br>输入</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1000</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">333833500</span></span><br></pre></td></tr></table></figure><h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><p>平方和公式：1^2^+2^2^+3^2^+……+n^2^=n(n+1)(2n+1)/6<br>（建议补一补高中的一些公式，<del>我也没想起来</del> ）<br>注意题目是要mod的<br>模运算：<br>(a + b) % p = (a % p + b % p) % p<br>(a - b) % p = (a % p - b % p) % p<br>(a * b) % p = (a % p * b % p) % p<br>a ^b^ % p = ((a % p)^b^) % p<br>我们可以发现唯独没有除法的模运算，但是公式中有个 /6 需要处理，那我们可以用逆元的方式将除法变成乘法<br>逆元：整数a,b，满足a * b = 1（mod m），那么称b是a的模m乘法逆元<br>比如：A/B%C我们可以写成A * （1 / B）% C，这样就是A<em>X%C的形式，如何求X？和上面的逆元结合起来就OK了<br>这样/6%mod，我就可以写成</em> inv（6）%mod<br>求逆元的方法这里就不详细介绍了</p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1000000007</span>;</span><br><span class="line"><span class="function">ll <span class="title">exgcd</span><span class="params">(ll a,ll b,ll &amp;x,ll &amp;y)</span><span class="comment">//扩展欧几里得算法</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        x=<span class="number">1</span>;</span><br><span class="line">y=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;  <span class="comment">//到达递归边界开始向上一层返回</span></span><br><span class="line">    &#125;</span><br><span class="line">    ll gcd=exgcd(b,a%b,x,y);</span><br><span class="line">    ll y1=y;    <span class="comment">//把x y变成上一层的</span></span><br><span class="line">    ll x1=x;</span><br><span class="line">    y=x1-(a/b)*y1;</span><br><span class="line">    x=y1;</span><br><span class="line">    <span class="keyword">return</span> gcd;     <span class="comment">//得到a b的最大公因数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">inv</span><span class="params">(ll a,ll mod)</span></span>&#123;</span><br><span class="line">ll x,y;</span><br><span class="line">ll gcd=exgcd(a,mod,x,y);</span><br><span class="line"><span class="keyword">if</span>(gcd!=<span class="number">1</span>)<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> (x+mod)%mod; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll n;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)&#123;</span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line">ans=(((n%mod)*((n+<span class="number">1</span>)%mod)%mod*((<span class="number">2</span>*n+<span class="number">1</span>)%mod))%mod);</span><br><span class="line">ll inv6=inv(<span class="number">6</span>,mod);</span><br><span class="line">ans=(ans%mod*inv6%mod)%mod;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/problem/15950&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;来源：牛客网&lt;/a&gt;&lt;br&gt;@[toc]&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;时间限制：C/C++ &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;秒，其他语言&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;秒&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;空间限制：C/C++ &lt;span class=&quot;number&quot;&gt;131072&lt;/span&gt;K，其他语言&lt;span class=&quot;number&quot;&gt;262144&lt;/span&gt;K&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;64b&lt;/span&gt;it IO Format: %lld&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;定义S(n) = 12 + 22 + … + n2，输出S(n) % 1000000007。&lt;/p&gt;
&lt;p&gt;注意：1 &amp;lt; n &amp;lt; 1e18。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="题解" scheme="http://Jozky.top/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="exgcd" scheme="http://Jozky.top/tags/exgcd/"/>
    
      <category term="数论" scheme="http://Jozky.top/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="逆元" scheme="http://Jozky.top/tags/%E9%80%86%E5%85%83/"/>
    
  </entry>
  
  <entry>
    <title>一起开心2020暑假训练第一周（数论篇）</title>
    <link href="http://jozky.top/2020/07/03/%E4%B8%80%E8%B5%B7%E5%BC%80%E5%BF%832020%E6%9A%91%E5%81%87%E8%AE%AD%E7%BB%83%E7%AC%AC%E4%B8%80%E5%91%A8/"/>
    <id>http://jozky.top/2020/07/03/%E4%B8%80%E8%B5%B7%E5%BC%80%E5%BF%832020%E6%9A%91%E5%81%87%E8%AE%AD%E7%BB%83%E7%AC%AC%E4%B8%80%E5%91%A8/</id>
    <published>2020-07-03T08:49:53.000Z</published>
    <updated>2020-07-03T09:03:22.813Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hdu-1576-A-B"><a href="#hdu-1576-A-B" class="headerlink" title="hdu 1576 A/B"></a>hdu 1576 A/B</h2><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1576%28HDU-1576%29" target="_blank" rel="noopener">oj传送</a><br><a href="https://blog.csdn.net/qq_35975367/article/details/107069074" target="_blank" rel="noopener">题解：</a></p><h2 id="Poj-1061-青蛙的约会"><a href="#Poj-1061-青蛙的约会" class="headerlink" title="Poj 1061 青蛙的约会"></a>Poj 1061 青蛙的约会</h2><p><a href="http://poj.org/problem?id=1061" target="_blank" rel="noopener">oj传送</a><br><a href="https://blog.csdn.net/qq_35975367/article/details/107072590" target="_blank" rel="noopener">题解：</a></p><a id="more"></a> <h2 id="hdu-1525-Euclid‘s-Game"><a href="#hdu-1525-Euclid‘s-Game" class="headerlink" title="hdu 1525 Euclid‘s Game"></a>hdu 1525 Euclid‘s Game</h2><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1525" target="_blank" rel="noopener">oj传送</a><br><a href="https://blog.csdn.net/qq_35975367/article/details/107082170" target="_blank" rel="noopener">题解：</a></p><h2 id="Poj-3070-Fibonacci"><a href="#Poj-3070-Fibonacci" class="headerlink" title="Poj 3070 Fibonacci"></a>Poj 3070 Fibonacci</h2><p><a href="http://poj.org/problem?id=3070" target="_blank" rel="noopener">oj传送</a><br><a href="https://blog.csdn.net/qq_35975367/article/details/107084754" target="_blank" rel="noopener">题解：</a></p><h2 id="HDU-2504-又见GCD"><a href="#HDU-2504-又见GCD" class="headerlink" title="HDU 2504 又见GCD"></a>HDU 2504 又见GCD</h2><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2504" target="_blank" rel="noopener">oj传送</a><br><a href="https://blog.csdn.net/qq_35975367/article/details/107096246" target="_blank" rel="noopener">题解：</a></p><h2 id="Poj-1284-Primitive-Roots"><a href="#Poj-1284-Primitive-Roots" class="headerlink" title="Poj 1284 Primitive Roots"></a>Poj 1284 Primitive Roots</h2><p><a href="http://poj.org/problem?id=1284" target="_blank" rel="noopener">oj传送</a><br><a href="https://blog.csdn.net/qq_35975367/article/details/107101360" target="_blank" rel="noopener">题解：</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;hdu-1576-A-B&quot;&gt;&lt;a href=&quot;#hdu-1576-A-B&quot; class=&quot;headerlink&quot; title=&quot;hdu 1576 A/B&quot;&gt;&lt;/a&gt;hdu 1576 A/B&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=1576%28HDU-1576%29&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;oj传送&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://blog.csdn.net/qq_35975367/article/details/107069074&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题解：&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Poj-1061-青蛙的约会&quot;&gt;&lt;a href=&quot;#Poj-1061-青蛙的约会&quot; class=&quot;headerlink&quot; title=&quot;Poj 1061 青蛙的约会&quot;&gt;&lt;/a&gt;Poj 1061 青蛙的约会&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=1061&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;oj传送&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://blog.csdn.net/qq_35975367/article/details/107072590&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题解：&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="一起开心" scheme="http://Jozky.top/categories/%E4%B8%80%E8%B5%B7%E5%BC%80%E5%BF%83/"/>
    
      <category term="比赛" scheme="http://Jozky.top/categories/%E4%B8%80%E8%B5%B7%E5%BC%80%E5%BF%83/%E6%AF%94%E8%B5%9B/"/>
    
    
      <category term="数论" scheme="http://Jozky.top/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>Poj 1284 Primitive Roots</title>
    <link href="http://jozky.top/2020/07/03/Poj-1284-Primitive-Roots/"/>
    <id>http://jozky.top/2020/07/03/Poj-1284-Primitive-Roots/</id>
    <published>2020-07-03T08:49:44.000Z</published>
    <updated>2020-07-03T09:01:15.292Z</updated>
    
    <content type="html"><![CDATA[<p>@[toc]<br><a href="http://poj.org/problem?id=1284" target="_blank" rel="noopener">Poj 1284</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Time Limit: <span class="number">1000</span>MSMemory Limit: <span class="number">10000</span>K</span><br><span class="line">Total Submissions: <span class="number">6485</span>Accepted: <span class="number">3697</span></span><br></pre></td></tr></table></figure><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>We say that integer x, 0 &lt; x &lt; p, is a primitive root modulo odd prime<br>p if and only if the set { (xi mod p) | 1 &lt;= i &lt;= p-1 } is equal to {<br>1, …, p-1 }. For example, the consecutive powers of 3 modulo 7 are<br>3, 2, 6, 4, 5, 1, and thus 3 is a primitive root modulo 7. Write a<br>program which given any odd prime 3 &lt;= p &lt; 65536 outputs the number of<br>primitive roots modulo p.</p></blockquote><a id="more"></a> <p><strong>Input</strong></p><blockquote><p>Each line of the input contains an odd prime numbers p. Input is<br>terminated by the end-of-file seperator.</p></blockquote><p><strong>Output</strong></p><blockquote><p>For each p, print a single number that gives the number of primitive<br>roots in a single line.</p></blockquote><p><strong>Sample Input</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">23</span></span><br><span class="line"><span class="number">31</span></span><br><span class="line"><span class="number">79</span></span><br></pre></td></tr></table></figure><p><strong>Sample Output</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">24</span></span><br></pre></td></tr></table></figure><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p>给定一个p，存在一个x，使得x^i^%p的值的集合(i的范围是1~p-1）是{1,2…..p-1},求出x是多少？</p><h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><p>数论题，涉及欧拉公式<br>先介绍一个概念：<br>设m是正整数，a是整数，若a模m的阶等于φ(m)，则称a为模m的一个原根。（其中φ(m)表示m的欧拉函数）<br>假设一个数g对于P来说是原根，那么g^i^ mod P的结果两两不同,且有 1&lt;g&lt;P, 0&lt;i&lt;P,那么g可以称为是P的一个原根,归根到底就是g^(P-1)^ = 1 (mod P)当且仅当指数为P-1的时候成立.(这里P是素数).<br>选自百度百科<br>结合到本题，x就是p的一个原根，那我们只需要找到满足x^p-1^=1(mod P)这个式子就可以，这个式子也就是欧拉公式的φ(p-1)<br><a href="https://blog.csdn.net/qq_35975367/article/details/105403662" target="_blank" rel="noopener">欧拉公式的讲解可以看这里</a></p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function">ll <span class="title">Euler</span><span class="params">(ll n)</span></span>&#123;</span><br><span class="line">ll res=n;</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">2</span>;i*i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(n%i==<span class="number">0</span>)&#123;</span><br><span class="line">n/=i;</span><br><span class="line">res=res-res/i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(n%i==<span class="number">0</span>)n/=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(n&gt;<span class="number">1</span>)res=res-res/n;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> p;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;p)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;Euler(p<span class="number">-1</span>)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;@[toc]&lt;br&gt;&lt;a href=&quot;http://poj.org/problem?id=1284&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Poj 1284&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Time Limit: &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;MS		Memory Limit: &lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt;K&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Total Submissions: &lt;span class=&quot;number&quot;&gt;6485&lt;/span&gt;		Accepted: &lt;span class=&quot;number&quot;&gt;3697&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;We say that integer x, 0 &amp;lt; x &amp;lt; p, is a primitive root modulo odd prime&lt;br&gt;p if and only if the set { (xi mod p) | 1 &amp;lt;= i &amp;lt;= p-1 } is equal to {&lt;br&gt;1, …, p-1 }. For example, the consecutive powers of 3 modulo 7 are&lt;br&gt;3, 2, 6, 4, 5, 1, and thus 3 is a primitive root modulo 7. Write a&lt;br&gt;program which given any odd prime 3 &amp;lt;= p &amp;lt; 65536 outputs the number of&lt;br&gt;primitive roots modulo p.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="题解" scheme="http://Jozky.top/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="数论" scheme="http://Jozky.top/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="原根" scheme="http://Jozky.top/tags/%E5%8E%9F%E6%A0%B9/"/>
    
      <category term="欧拉函数" scheme="http://Jozky.top/tags/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>HDU 2504 又见GCD</title>
    <link href="http://jozky.top/2020/07/03/HDU-2504-%E5%8F%88%E8%A7%81GCD/"/>
    <id>http://jozky.top/2020/07/03/HDU-2504-%E5%8F%88%E8%A7%81GCD/</id>
    <published>2020-07-03T08:49:36.000Z</published>
    <updated>2020-07-03T09:02:04.766Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2504" target="_blank" rel="noopener">HDU 2504</a><br>@[toc]</p><h2 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h2><blockquote><p>有三个正整数a,b,c(0&lt;a,b,c&lt;10^6)，其中c不等于b。若a和c的最大公约数为b，现已知a和b，求满足条件的最小的c。</p></blockquote><a id="more"></a> <p><strong>Input</strong></p><blockquote><p>第一行输入一个n，表示有n组测试数据，接下来的n行，每行输入两个正整数a,b。</p></blockquote><p><strong>Output</strong></p><blockquote><p>输出对应的c，每组测试数据占一行。</p></blockquote><p><strong>Sample Input</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">6</span> <span class="number">2</span></span><br><span class="line"><span class="number">12</span> <span class="number">4</span></span><br></pre></td></tr></table></figure><p><strong>Sample Output</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">8</span></span><br></pre></td></tr></table></figure><h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><p>单纯的暴力就能过。。。。<br>也可以加点小优化，gcd(a,c)=b,那么gcd(a/b,c/b)=1,所以枚举 i ,使得 i 满足gcd（a/b,i）=1<br>反正怎么都能过</p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> b==<span class="number">0</span>?a:gcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">while</span>(n--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=b+<span class="number">1</span>;;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(gcd(a,i)==b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=2504&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;HDU 2504&lt;/a&gt;&lt;br&gt;@[toc]&lt;/p&gt;
&lt;h2 id=&quot;Problem-Description&quot;&gt;&lt;a href=&quot;#Problem-Description&quot; class=&quot;headerlink&quot; title=&quot;Problem Description&quot;&gt;&lt;/a&gt;Problem Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;有三个正整数a,b,c(0&amp;lt;a,b,c&amp;lt;10^6)，其中c不等于b。若a和c的最大公约数为b，现已知a和b，求满足条件的最小的c。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="题解" scheme="http://Jozky.top/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="数论" scheme="http://Jozky.top/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="gcd" scheme="http://Jozky.top/tags/gcd/"/>
    
      <category term="暴力" scheme="http://Jozky.top/tags/%E6%9A%B4%E5%8A%9B/"/>
    
  </entry>
  
  <entry>
    <title>Poj 3070 Fibonacci</title>
    <link href="http://jozky.top/2020/07/03/Poj-3070-Fibonacci/"/>
    <id>http://jozky.top/2020/07/03/Poj-3070-Fibonacci/</id>
    <published>2020-07-03T08:49:28.000Z</published>
    <updated>2020-07-03T09:00:27.692Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Time Limit: <span class="number">1000</span>MSMemory Limit: <span class="number">65536</span>K</span><br><span class="line">Total Submissions: <span class="number">26063</span>Accepted: <span class="number">17394</span></span><br></pre></td></tr></table></figure><p>@[toc]<br><a href="http://poj.org/problem?id=3070" target="_blank" rel="noopener">Poj 3070 Fibonacci</a></p><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>In the Fibonacci integer sequence, F0 = 0, F1 = 1, and Fn = Fn − 1 +<br>Fn − 2 for n ≥ 2. For example, the first ten terms of the Fibonacci<br>sequence are:</p><p>0, 1, 1, 2, 3, 5, 8, 13, 21, 34, …</p></blockquote><a id="more"></a> <blockquote><p>An alternative formula for the Fibonacci sequence is<br><img src="https://uploadfiles.nowcoder.com/files/20200702/543071257_1593675345758_20200702150853954.png" alt="在这里插入图片描述"> .</p><p>Given an integer n, your goal is to compute the last 4 digits of Fn.</p></blockquote><p><strong>Input</strong></p><p>The input test file will contain multiple test cases. Each test case consists of a single line containing n (where 0 ≤ n ≤ 1,000,000,000). The end-of-file is denoted by a single line containing the number −1.</p><p><strong>Output</strong></p><p>For each test case, print the last four digits of Fn. If the last four digits of Fn are all zeros, print ‘0’; otherwise, omit any leading zeros (i.e., print Fn mod 10000).</p><p><strong>Sample Input</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">999999999</span></span><br><span class="line"><span class="number">1000000000</span></span><br><span class="line"><span class="number">-1</span></span><br></pre></td></tr></table></figure><p><strong>Sample Output</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">34</span></span><br><span class="line"><span class="number">626</span></span><br><span class="line"><span class="number">6875</span></span><br></pre></td></tr></table></figure><p><strong>Hint</strong></p><blockquote><p>As a reminder, matrix multiplication is associative, and the product<br>of two 2 × 2 matrices is given by<br><img src="https://uploadfiles.nowcoder.com/files/20200702/543071257_1593675345797_20200702150951772.png" alt="在这里插入图片描述"> .</p><p>Also, note that raising any 2 × 2 matrix to the 0th power gives the<br>identity matrix:<br><img src="https://uploadfiles.nowcoder.com/files/20200702/543071257_1593675345770_202007021509552.png" alt="在这里插入图片描述"> </p></blockquote><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p>其实就是求第x位斐波那契数列（记得mod10000），不过题目给你介绍了矩阵的相关知识，以及矩阵与斐波那契数列的联系，就是让你用矩阵快速幂来求斐波那契数列。</p><h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><p><a href="https://blog.csdn.net/qq_35975367/article/details/107013556" target="_blank" rel="noopener">斐波那契数列的博客</a><br>我在这个博客里详细介绍了三种斐波那契数列的求法，其中就有矩阵快速幂的方法<br>所以我在这就不详细介绍，简单说说：<br>mul（a，b）是用来进行矩阵a与b的乘法运算<br> pow(mat a,ll n)//快速幂求矩阵a的n次幂 </p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstddef&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;  </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">10000</span>;  </span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;ll&gt; vec;  </span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;vec&gt; mat;  </span><br><span class="line"><span class="function">mat <span class="title">mul</span><span class="params">(mat &amp;a,mat &amp;b)</span> </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="function">mat <span class="title">c</span><span class="params">(a.size(),vec(b[<span class="number">0</span>].size()))</span></span>;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">2</span>; i++)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;<span class="number">2</span>; j++)  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>; k&lt;<span class="number">2</span>; k++)  </span><br><span class="line">            &#123;  </span><br><span class="line">                c[i][j]+=a[i][k]*b[k][j];<span class="comment">//矩阵的运算法则 </span></span><br><span class="line">                c[i][j]%=mod;  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> c;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function">mat <span class="title">pow</span><span class="params">(mat a,ll n)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="function">mat <span class="title">res</span><span class="params">(a.size(),vec(a.size()))</span></span>;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;a.size(); i++)  </span><br><span class="line">        res[i][i]=<span class="number">1</span>;  </span><br><span class="line">    <span class="keyword">while</span>(n)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>) res=mul(res,a);  </span><br><span class="line">        a=mul(a,a);  </span><br><span class="line">        n/=<span class="number">2</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> res;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="function">ll <span class="title">solve</span><span class="params">(ll n)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="function">mat <span class="title">a</span><span class="params">(<span class="number">2</span>,vec(<span class="number">2</span>))</span></span>;  </span><br><span class="line">    a[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;  </span><br><span class="line">    a[<span class="number">0</span>][<span class="number">1</span>]=<span class="number">1</span>;  </span><br><span class="line">    a[<span class="number">1</span>][<span class="number">0</span>]=<span class="number">1</span>;  </span><br><span class="line">    a[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">0</span>;  </span><br><span class="line">    a=<span class="built_in">pow</span>(a,n);  </span><br><span class="line">    <span class="keyword">return</span> a[<span class="number">0</span>][<span class="number">1</span>];</span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    ll n;  </span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&amp;&amp;n!=<span class="number">-1</span>)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;solve(n)&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Time Limit: &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;MS		Memory Limit: &lt;span class=&quot;number&quot;&gt;65536&lt;/span&gt;K&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Total Submissions: &lt;span class=&quot;number&quot;&gt;26063&lt;/span&gt;		Accepted: &lt;span class=&quot;number&quot;&gt;17394&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;@[toc]&lt;br&gt;&lt;a href=&quot;http://poj.org/problem?id=3070&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Poj 3070 Fibonacci&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;In the Fibonacci integer sequence, F0 = 0, F1 = 1, and Fn = Fn − 1 +&lt;br&gt;Fn − 2 for n ≥ 2. For example, the first ten terms of the Fibonacci&lt;br&gt;sequence are:&lt;/p&gt;
&lt;p&gt;0, 1, 1, 2, 3, 5, 8, 13, 21, 34, …&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="题解" scheme="http://Jozky.top/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="数论" scheme="http://Jozky.top/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="斐波那契数列" scheme="http://Jozky.top/tags/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>hdu 1525 Euclid‘s Game</title>
    <link href="http://jozky.top/2020/07/03/hdu-1525-Euclid%E2%80%98s-Game/"/>
    <id>http://jozky.top/2020/07/03/hdu-1525-Euclid%E2%80%98s-Game/</id>
    <published>2020-07-03T08:49:18.000Z</published>
    <updated>2020-07-03T08:58:41.676Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/submit.php?pid=1525" target="_blank" rel="noopener">hdu 1525</a><br>@[toc]</p><h2 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h2><blockquote><p>Two players, Stan and Ollie, play, starting with two natural numbers.<br>Stan, the first player, subtracts any positive multiple of the lesser<br>of the two numbers from the greater of the two numbers, provided that<br>the resulting number must be nonnegative. Then Ollie, the second<br>player, does the same with the two resulting numbers, then Stan, etc.,<br>alternately, until one player is able to subtract a multiple of the<br>lesser number from the greater to reach 0, and thereby wins. For<br>example, the players may start with (25,7): </p><p>25 7 11 7 4 7 4 3 1 3 1 0 </p><p>an Stan wins.</p></blockquote><p><strong>Input</strong></p><blockquote><p>The input consists of a number of lines. Each line contains two<br>positive integers giving the starting two numbers of the game. Stan<br>always starts.</p></blockquote><p><strong>Output</strong></p><blockquote><p>For each line of input, output one line saying either Stan wins or<br>Ollie wins assuming that both of them play perfectly. The last line of<br>input contains two zeroes and should not be processed.</p></blockquote><p><strong>Sample Input</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">34</span> <span class="number">12</span></span><br><span class="line"><span class="number">15</span> <span class="number">24</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p><strong>Sample Output</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Stan wins</span><br><span class="line">Ollie wins</span><br></pre></td></tr></table></figure><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p>n和m两个数，两个人轮流进行操作，每次可以剪去i*min（n，m），i自定（剪去n和m中最小数的倍数），有一个数减到0即为胜利，问先手后手谁先赢</p><a id="more"></a> <h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><p><strong>非正式解答：</strong><br>一看是博弈论我就开始搜索我脑中的知识（发现为空）<br>直觉告诉我肯定有规律和公式，我便自造数据多次实验，最终发现最先遇到一个数是另一个数的两倍以上时，即可以成功（也就是（n/m&gt;1），此处n&gt;m）,特殊情况是n和m相同时也是谁遇到谁赢。综合下就是：谁遇到n/m!=1时，谁就赢。<br>为什么呢？我是这么理解的，当遇到n/m&gt;1时，此人可以选择减一个m，也可以选减多个m，而这对后面的情况是有影响的，而总有一种情况是对自己有利的，只要按照这个方向走，一定能赢（多局试验后得出）<br>当然如果全程n/m==1，那么双方的操作都是固定的，没有选择空间，因为都只能减一次，所以轮流操作，奇数个操作流程先手赢，反之后手赢<br><strong>正式解答：</strong><br><a href="https://blog.csdn.net/blessLZH0108/article/details/78271679" target="_blank" rel="noopener">正规解答来自</a><br>令n为较小的数，m为较大的数，可以发现：<br>当m%n=0时，先手必胜</p><p>当m&gt;=2n时，如果（m%n，m）为必胜态，先手可以先将局势变为（m%n+n，n），则后手只能将局势变为（m%n，n）；如果（m%n，n）为必败态，先手可以直接将局势变为（m%n，n）。因此，不论（m%n，n）为什么态，先手都必胜</p><p>当2n&gt;m&gt;n时，那就是一步一步走下去，直到出现m%n=0||m&gt;=2n结束</p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>&amp;&amp;m==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span>(m&gt;n)swap(n,m);</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">1</span>;<span class="comment">//记录步伐</span></span><br><span class="line">        <span class="keyword">int</span> f=<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(n!=<span class="number">0</span>&amp;&amp;m!=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(m&gt;n)swap(n,m);</span><br><span class="line">            <span class="keyword">if</span>(n/m!=<span class="number">1</span>||m==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                f=ans;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ans++;</span><br><span class="line">            n-=m;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(f&amp;<span class="number">1</span>)<span class="built_in">cout</span>&lt;&lt;<span class="string">"Stan wins"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"Ollie wins"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://acm.hdu.edu.cn/submit.php?pid=1525&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hdu 1525&lt;/a&gt;&lt;br&gt;@[toc]&lt;/p&gt;
&lt;h2 id=&quot;Problem-Description&quot;&gt;&lt;a href=&quot;#Problem-Description&quot; class=&quot;headerlink&quot; title=&quot;Problem Description&quot;&gt;&lt;/a&gt;Problem Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Two players, Stan and Ollie, play, starting with two natural numbers.&lt;br&gt;Stan, the first player, subtracts any positive multiple of the lesser&lt;br&gt;of the two numbers from the greater of the two numbers, provided that&lt;br&gt;the resulting number must be nonnegative. Then Ollie, the second&lt;br&gt;player, does the same with the two resulting numbers, then Stan, etc.,&lt;br&gt;alternately, until one player is able to subtract a multiple of the&lt;br&gt;lesser number from the greater to reach 0, and thereby wins. For&lt;br&gt;example, the players may start with (25,7): &lt;/p&gt;
&lt;p&gt;25 7 11 7 4 7 4 3 1 3 1 0 &lt;/p&gt;
&lt;p&gt;an Stan wins.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Input&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The input consists of a number of lines. Each line contains two&lt;br&gt;positive integers giving the starting two numbers of the game. Stan&lt;br&gt;always starts.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For each line of input, output one line saying either Stan wins or&lt;br&gt;Ollie wins assuming that both of them play perfectly. The last line of&lt;br&gt;input contains two zeroes and should not be processed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Sample Input&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;34&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Sample Output&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Stan wins&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Ollie wins&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;题意：&quot;&gt;&lt;a href=&quot;#题意：&quot; class=&quot;headerlink&quot; title=&quot;题意：&quot;&gt;&lt;/a&gt;题意：&lt;/h2&gt;&lt;p&gt;n和m两个数，两个人轮流进行操作，每次可以剪去i*min（n，m），i自定（剪去n和m中最小数的倍数），有一个数减到0即为胜利，问先手后手谁先赢&lt;/p&gt;
    
    </summary>
    
    
      <category term="题解" scheme="http://Jozky.top/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="数论" scheme="http://Jozky.top/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="博弈论" scheme="http://Jozky.top/tags/%E5%8D%9A%E5%BC%88%E8%AE%BA/"/>
    
      <category term="规律" scheme="http://Jozky.top/tags/%E8%A7%84%E5%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>Poj 1061 青蛙的约会</title>
    <link href="http://jozky.top/2020/07/03/Poj-1061-%E9%9D%92%E8%9B%99%E7%9A%84%E7%BA%A6%E4%BC%9A/"/>
    <id>http://jozky.top/2020/07/03/Poj-1061-%E9%9D%92%E8%9B%99%E7%9A%84%E7%BA%A6%E4%BC%9A/</id>
    <published>2020-07-03T08:49:06.000Z</published>
    <updated>2020-07-03T08:57:45.020Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Time Limit: 1000MS        Memory Limit: 10000K Total Submissions: 143491        Accepted: 33018 Description</p></blockquote><p>@[toc]<br><a href="http://poj.org/problem?id=1061" target="_blank" rel="noopener">题目传送</a></p><h2 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h2><blockquote><p>两只青蛙在网上相识了，它们聊得很开心，于是觉得很有必要见一面。它们很高兴地发现它们住在同一条纬度线上，于是它们约定各自朝西跳，直到碰面为止。可是它们出发之前忘记了一件很重要的事情，既没有问清楚对方的特征，也没有约定见面的具体位置。</p><a id="more"></a> <p>不过青蛙们都是很乐观的，它们觉得只要一直朝着某个方向跳下去，总能碰到对方的。但是除非这两只青蛙在同一时间跳到同一点上，不然是永远都不可能碰面的。为了帮助这两只乐观的青蛙，你被要求写一个程序来判断这两只青蛙是否能够碰面，会在什么时候碰面。<br>我们把这两只青蛙分别叫做青蛙A和青蛙B，并且规定纬度线上东经0度处为原点，由东往西为正方向，单位长度1米，这样我们就得到了一条首尾相接的数轴。设青蛙A的出发点坐标是x，青蛙B的出发点坐标是y。青蛙A一次能跳m米，青蛙B一次能跳n米，两只青蛙跳一次所花费的时间相同。纬度线总长L米。现在要你求出它们跳了几次以后才会碰面。</p></blockquote><p><strong>Input</strong></p><blockquote><p>输入只包括一行5个整数x，y，m，n，L，其中x≠y &lt; 2000000000，0 &lt; m、n &lt; 2000000000，0 &lt; L &lt;<br>2100000000。</p></blockquote><p><strong>Output</strong></p><blockquote><p>输出碰面所需要的跳跃次数，如果永远不可能碰面则输出一行”Impossible”</p></blockquote><p><strong>Sample Input</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><p><strong>Sample Output</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h2><p>我们先整合题意：<br>A初始为x，一次跳m<br>B初始为y，一次跳n<br>环形长度为L的线<br>我们可以根据题目列出公式：<br>（x+m * t）%L=(y+n * t)%L<br>也可以写成：<br>（x+m * t）+k * L=y+n * t<br>我们整理一下：<br>（m-n）* t+L * k=y -x<br>这就是我们要解的式子，看着熟悉吗？<br>是不是想起了这个形式：a * x+b * y=c<br>我们来看看对应关系：<br>a=m-n<br>b=L<br>c=y-x<br> （x , y ）= (t , k )<br> 我们可以用扩展欧几里得来求出特解，然后根据特解求出最小正整数解<br> 注意，要让a取正值</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">9973</span>;</span><br><span class="line"><span class="function">ll <span class="title">exgcd</span><span class="params">(ll a,ll b,ll &amp;x,ll &amp;y)</span><span class="comment">//扩展欧几里得算法</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        x=<span class="number">1</span>;</span><br><span class="line">y=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;  <span class="comment">//到达递归边界开始向上一层返回</span></span><br><span class="line">    &#125;</span><br><span class="line">    ll r=exgcd(b,a%b,x,y);</span><br><span class="line">    ll y1=y;    <span class="comment">//把x y变成上一层的</span></span><br><span class="line">    ll x1=x;</span><br><span class="line">    y=x1-(a/b)*y1;</span><br><span class="line">    x=y1;</span><br><span class="line">    <span class="keyword">return</span> r;     <span class="comment">//得到a b的最大公因数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll x,y,m,n,l;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y&gt;&gt;m&gt;&gt;n&gt;&gt;l;</span><br><span class="line"><span class="keyword">int</span> a=m-n;</span><br><span class="line"><span class="keyword">int</span> b=l;</span><br><span class="line"><span class="keyword">int</span> c=y-x;</span><br><span class="line"><span class="keyword">if</span>(m&lt;n) </span><br><span class="line">&#123;</span><br><span class="line">a=-a;<span class="comment">//a取正值 </span></span><br><span class="line">c=-c;</span><br><span class="line">&#125;<span class="comment">//谁在后面，谁走的快 </span></span><br><span class="line"><span class="comment">//ax+by=gcd(a,b)</span></span><br><span class="line"><span class="keyword">int</span> gcd=exgcd(a,b,x,y);</span><br><span class="line"><span class="comment">//cout&lt;&lt;"gcd="&lt;&lt;gcd&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">if</span>(c%gcd!=<span class="number">0</span>||m==n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Impossible"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">x=x*c/gcd;</span><br><span class="line"><span class="comment">//cout&lt;&lt;"x="&lt;&lt;x&lt;&lt;endl;</span></span><br><span class="line">ll t=b/gcd;</span><br><span class="line"><span class="comment">//cout&lt;&lt;"t="&lt;&lt;t&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">if</span>(x&gt;=<span class="number">0</span>)x%=t;</span><br><span class="line"><span class="keyword">else</span> x=x%t+t;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Time Limit: 1000MS        Memory Limit: 10000K Total Submissions: 143491        Accepted: 33018 Description&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;@[toc]&lt;br&gt;&lt;a href=&quot;http://poj.org/problem?id=1061&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目传送&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目：&quot;&gt;&lt;a href=&quot;#题目：&quot; class=&quot;headerlink&quot; title=&quot;题目：&quot;&gt;&lt;/a&gt;题目：&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;两只青蛙在网上相识了，它们聊得很开心，于是觉得很有必要见一面。它们很高兴地发现它们住在同一条纬度线上，于是它们约定各自朝西跳，直到碰面为止。可是它们出发之前忘记了一件很重要的事情，既没有问清楚对方的特征，也没有约定见面的具体位置。&lt;/p&gt;
    
    </summary>
    
    
      <category term="题解" scheme="http://Jozky.top/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="exgcd" scheme="http://Jozky.top/tags/exgcd/"/>
    
      <category term="数论" scheme="http://Jozky.top/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>hdu 1576 A/B</title>
    <link href="http://jozky.top/2020/07/03/hdu-1576-A-B/"/>
    <id>http://jozky.top/2020/07/03/hdu-1576-A-B/</id>
    <published>2020-07-03T08:48:58.000Z</published>
    <updated>2020-07-03T08:56:41.974Z</updated>
    
    <content type="html"><![CDATA[<p>@[toc]<br><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1576%28HDU-1576%29" target="_blank" rel="noopener">hdu 1576</a></p><h2 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h2><blockquote><p>要求(A/B)%9973，但由于A很大，我们只给出n(n=A%9973)(我们给定的A必能被B整除，且gcd(B,9973) = 1)。</p></blockquote><p><strong>Input</strong></p><blockquote><p>数据的第一行是一个T，表示有T组数据。 每组数据有两个数n(0 &lt;= n &lt; 9973)和B(1 &lt;= B &lt;= 10^9)。</p></blockquote><a id="more"></a> <p><strong>Output</strong></p><blockquote><p>对应每组数据输出(A/B)%9973。</p></blockquote><p><strong>Sample Input</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1000</span> <span class="number">53</span></span><br><span class="line"><span class="number">87</span> <span class="number">123456789</span></span><br></pre></td></tr></table></figure><p><strong>Sample Output</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">7922</span></span><br><span class="line"><span class="number">6060</span></span><br></pre></td></tr></table></figure><h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><p>先了解一些概念：<br>费马小定理：a^p−1^≡1 (mod p) ，其中 gcd(a,p)=1 ，p为质数</p><p>逆元：对于a和p，若 a * inv(a) % p ≡ 1，则称inv(a)为a%p的逆元。p为质数<br><img src="https://uploadfiles.nowcoder.com/files/20200701/543071257_1593598139238_20200701180427181.png" alt="在这里插入图片描述"><br><img src="https://uploadfiles.nowcoder.com/files/20200701/543071257_1593598139204_20200701180432979.png" alt="在这里插入图片描述"></p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">9973</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">poww</span><span class="params">(ll a,ll b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll ans=<span class="number">1</span>;</span><br><span class="line">ll base=a;</span><br><span class="line"><span class="keyword">while</span>(b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(b&amp;<span class="number">1</span>!=<span class="number">0</span>)ans=ans*base%mod;</span><br><span class="line">base=base*base%mod;</span><br><span class="line">b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line">ll n,b;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;b;</span><br><span class="line"><span class="comment">//cout&lt;&lt;poww(2,3)&lt;&lt;endl;</span></span><br><span class="line">cout&lt;&lt;n*poww(b,mod-2)%mod&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;@[toc]&lt;br&gt;&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=1576%28HDU-1576%29&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hdu 1576&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目：&quot;&gt;&lt;a href=&quot;#题目：&quot; class=&quot;headerlink&quot; title=&quot;题目：&quot;&gt;&lt;/a&gt;题目：&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;要求(A/B)%9973，但由于A很大，我们只给出n(n=A%9973)(我们给定的A必能被B整除，且gcd(B,9973) = 1)。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Input&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;数据的第一行是一个T，表示有T组数据。 每组数据有两个数n(0 &amp;lt;= n &amp;lt; 9973)和B(1 &amp;lt;= B &amp;lt;= 10^9)。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="题解" scheme="http://Jozky.top/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="费马小定理" scheme="http://Jozky.top/tags/%E8%B4%B9%E9%A9%AC%E5%B0%8F%E5%AE%9A%E7%90%86/"/>
    
      <category term="逆元" scheme="http://Jozky.top/tags/%E9%80%86%E5%85%83/"/>
    
  </entry>
  
  <entry>
    <title>HAPPY2020暑假训练前复习</title>
    <link href="http://jozky.top/2020/07/03/HAPPY2020%E6%9A%91%E5%81%87%E8%AE%AD%E7%BB%83%E5%89%8D%E5%A4%8D%E4%B9%A0/"/>
    <id>http://jozky.top/2020/07/03/HAPPY2020%E6%9A%91%E5%81%87%E8%AE%AD%E7%BB%83%E5%89%8D%E5%A4%8D%E4%B9%A0/</id>
    <published>2020-07-03T08:48:44.000Z</published>
    <updated>2020-07-03T08:55:26.772Z</updated>
    
    <content type="html"><![CDATA[<h2 id="A-计蒜客-T1381"><a href="#A-计蒜客-T1381" class="headerlink" title="A.计蒜客 - T1381"></a>A.计蒜客 - T1381</h2><p>输出hello world<br>万恶之源</p><h2 id="B-51Nod-2060"><a href="#B-51Nod-2060" class="headerlink" title="B.51Nod - 2060"></a>B.51Nod - 2060</h2><p>全排列输出<br>不要用STL的next_permutation,会超时</p><a id="more"></a> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">14</span>;</span><br><span class="line"><span class="keyword">int</span> dt[maxn];</span><br><span class="line"><span class="keyword">int</span> vis[maxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> depth)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(depth==n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">if</span>(i==n)<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">0</span>)<span class="built_in">cout</span>&lt;&lt;dt[i];</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>&lt;&lt;dt[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(vis[i]==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            vis[i]=<span class="number">1</span>;</span><br><span class="line">            dt[depth]=i;</span><br><span class="line">            </span><br><span class="line">            dfs(depth+<span class="number">1</span>);</span><br><span class="line">            </span><br><span class="line">            vis[i]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    dfs(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-HDU-1715"><a href="#C-HDU-1715" class="headerlink" title="C HDU - 1715"></a>C HDU - 1715</h2><p>求斐波那契数列（不过比较大到1000）<br>用数组来存每一位，模拟进制运算</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">1005</span>][<span class="number">605</span>];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">f[<span class="number">1</span>][<span class="number">0</span>] = f[<span class="number">2</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">f[<span class="number">1</span>][<span class="number">1</span>] = f[<span class="number">2</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> len = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">3</span>;i &lt;= <span class="number">1000</span>;i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= len;j ++)</span><br><span class="line">&#123;</span><br><span class="line">f[i][j] += f[i<span class="number">-1</span>][j] + f[i<span class="number">-2</span>][j];</span><br><span class="line"><span class="keyword">if</span>(f[i][j] &gt;= <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">f[i][j+<span class="number">1</span>] += f[i][j] / <span class="number">10</span>;</span><br><span class="line">f[i][j] %= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(f[i][len+<span class="number">1</span>]) len ++;</span><br><span class="line">f[i][<span class="number">0</span>] = len;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, t;</span><br><span class="line">init();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t --)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = f[n][<span class="number">0</span>];i &gt;= <span class="number">1</span>;i --)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>, f[n][i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,q,i,j,temp=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;q;</span><br><span class="line">    <span class="keyword">while</span>(q--)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">      <span class="keyword">char</span> a[<span class="number">10010</span>]=<span class="string">"1"</span>,b[<span class="number">10010</span>]=<span class="string">"1"</span>,c[<span class="number">10010</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n<span class="number">-2</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> len=max(<span class="built_in">strlen</span>(a),<span class="built_in">strlen</span>(b));</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;len;j++)&#123;   <span class="comment">//模拟加法</span></span><br><span class="line">            temp=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(a[j]&gt;=<span class="string">'0'</span>)&#123;    <span class="comment">//短的数不加</span></span><br><span class="line">                temp+=a[j]-<span class="string">'0'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(b[j]&gt;=<span class="string">'0'</span>)&#123;</span><br><span class="line">                temp+=b[j]-<span class="string">'0'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(temp&gt;=<span class="number">10</span>)&#123;      <span class="comment">//判断进位</span></span><br><span class="line">                <span class="keyword">if</span>(c[j]&gt;=<span class="string">'0'</span>)&#123;</span><br><span class="line">                    c[j]+=temp<span class="number">-10</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    c[j]+=temp<span class="number">-10</span>+<span class="string">'0'</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                c[j+<span class="number">1</span>]=<span class="number">1</span>+<span class="string">'0'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(c[j]&gt;=<span class="string">'0'</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(temp==<span class="number">9</span>)&#123;   <span class="comment">//若前位进位了,而且加上的数字是9,那么还要进位!!!</span></span><br><span class="line">                        c[j]=<span class="string">'0'</span>;</span><br><span class="line">                        c[j+<span class="number">1</span>]=<span class="string">'1'</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span>&#123;</span><br><span class="line">                        c[j]+=temp;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    c[j]+=temp+<span class="string">'0'</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">strcpy</span>(a, b);</span><br><span class="line">        <span class="built_in">strcpy</span>(b, c);</span><br><span class="line">        <span class="built_in">memset</span>(c, <span class="number">0</span>, <span class="keyword">sizeof</span>(c));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> len=<span class="built_in">strlen</span>(b);</span><br><span class="line">    <span class="keyword">for</span>(i=len<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;  <span class="comment">//倒着输出</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>,b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D-POJ-2251"><a href="#D-POJ-2251" class="headerlink" title="D POJ - 2251"></a>D POJ - 2251</h2><p>三维迷宫BFS搜就完事了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">32</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="keyword">int</span> y;</span><br><span class="line"><span class="keyword">int</span> z;</span><br><span class="line"><span class="keyword">int</span> step;</span><br><span class="line">&#125; start,fin; </span><br><span class="line"><span class="keyword">char</span> a[maxn][maxn][maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn][maxn][maxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dx[]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[]=&#123;<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dz[]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> l,r,c;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> flag=<span class="literal">false</span>;</span><br><span class="line"><span class="built_in">queue</span>&lt;node&gt; q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(q.size()) q.pop();</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="literal">false</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">q.push(start);</span><br><span class="line">vis[start.x][start.y][start.z]=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">while</span>(!q.empty())</span><br><span class="line">&#123;</span><br><span class="line">node temp=q.front();</span><br><span class="line">q.pop();</span><br><span class="line"><span class="keyword">if</span>(temp.x==fin.x &amp;&amp; temp.y==fin.y &amp;&amp; temp.z==fin.z)</span><br><span class="line">&#123;</span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Escaped in %d minute(s).\n"</span>,temp.step);</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">node next;</span><br><span class="line">next.x=temp.x+dx[i];</span><br><span class="line">next.y=temp.y+dy[i];</span><br><span class="line">next.z=temp.z+dz[i];</span><br><span class="line"><span class="keyword">if</span>( next.x&gt;=<span class="number">0</span>&amp;&amp;next.x&lt;l &amp;&amp; next.y&gt;=<span class="number">0</span>&amp;&amp;next.y&lt;r &amp;&amp; next.z&gt;=<span class="number">0</span>&amp;&amp;next.z&lt;c </span><br><span class="line">&amp;&amp;!vis[next.x][next.y][next.z] &amp;&amp; a[next.x][next.y][next.z]!=<span class="string">'#'</span>)</span><br><span class="line">&#123;</span><br><span class="line">vis[next.x][next.y][next.z]=<span class="literal">true</span>;</span><br><span class="line">next.step=temp.step+<span class="number">1</span>;</span><br><span class="line">q.push(next); </span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;l&gt;&gt;r&gt;&gt;c)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(l==<span class="number">0</span>&amp;&amp;r==<span class="number">0</span>&amp;&amp;c==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;r;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;c;k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i][j][k];</span><br><span class="line"><span class="keyword">if</span>(a[i][j][k]==<span class="string">'S'</span>)</span><br><span class="line">&#123;</span><br><span class="line">start.x=i;</span><br><span class="line">start.y=j;</span><br><span class="line">start.z=k;</span><br><span class="line">start.step=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(a[i][j][k]==<span class="string">'E'</span>)</span><br><span class="line">&#123;</span><br><span class="line">fin.x=i;</span><br><span class="line">fin.y=j;</span><br><span class="line">fin.z=k;</span><br><span class="line">fin.step=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line">bfs();</span><br><span class="line"><span class="keyword">if</span>(!flag)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Trapped!"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="E-计蒜客-T2028"><a href="#E-计蒜客-T2028" class="headerlink" title="E 计蒜客 - T2028"></a>E 计蒜客 - T2028</h2><p>跳石头，经典二分题目， noip原题</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> a[<span class="number">50004</span>];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> d,n,m;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> tot=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> now=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i&lt;n+<span class="number">1</span>)&#123;</span><br><span class="line">i++;</span><br><span class="line"><span class="keyword">if</span>(a[i]-a[now]&lt;x)tot++;</span><br><span class="line"><span class="keyword">else</span> now=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(tot&gt;m)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;d&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">&#125; </span><br><span class="line">a[n+<span class="number">1</span>]=d;</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> r=d;</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"><span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line"><span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(judge(mid))&#123;</span><br><span class="line">l=mid+<span class="number">1</span>;</span><br><span class="line">ans=mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> r=mid<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="F-HDU-1702"><a href="#F-HDU-1702" class="headerlink" title="F HDU - 1702"></a>F HDU - 1702</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cnd</span><span class="params">(<span class="keyword">int</span> sum,<span class="keyword">bool</span> f)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(f==<span class="number">1</span>)</span><br><span class="line">&#123;<span class="comment">//先进先出 </span></span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="built_in">string</span> a;</span><br><span class="line"><span class="keyword">int</span> b;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=sum;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line"><span class="keyword">if</span>(a[<span class="number">0</span>]==<span class="string">'I'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;b;</span><br><span class="line">q.push(b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(q.empty())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"None"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;q.front()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">q.pop();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(!q.empty())q.pop();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt;s;</span><br><span class="line"><span class="built_in">string</span> a;</span><br><span class="line"><span class="keyword">int</span> b;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=sum;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line"><span class="keyword">if</span>(a[<span class="number">0</span>]==<span class="string">'I'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;b;</span><br><span class="line">s.push(b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(s.empty())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"None"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;s.top()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">s.pop();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(!s.empty())s.pop();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="built_in">string</span> s;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a&gt;&gt;s;</span><br><span class="line"><span class="comment">//cout&lt;&lt;s[0]&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">bool</span> f;</span><br><span class="line"><span class="keyword">if</span>(s[<span class="number">2</span>]==<span class="string">'F'</span>)f=<span class="number">1</span>;<span class="comment">//先进先出 </span></span><br><span class="line"><span class="keyword">else</span> f=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cnd(a,f); </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="G-POJ-1011"><a href="#G-POJ-1011" class="headerlink" title="G POJ - 1011"></a>G POJ - 1011</h2><p><a href="https://blog.csdn.net/qq_35975367/article/details/107050103" target="_blank" rel="noopener">详细题解</a></p><h2 id="H-POJ-3494"><a href="#H-POJ-3494" class="headerlink" title="H POJ - 3494"></a>H POJ - 3494</h2><p>求最大全1子矩阵的面积<br><a href="https://blog.csdn.net/qq_35975367/article/details/107015009" target="_blank" rel="noopener">题解</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">2007</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> h[MAXN],s[MAXN],L[MAXN],R[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(t &gt; <span class="number">0</span> &amp;&amp; h[s[t<span class="number">-1</span>]] &gt;= h[i])t--;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(t == <span class="number">0</span>) L[i] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span> L[i] = s[t<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">        </span><br><span class="line">s[t++] = i;</span><br><span class="line">    &#125;<span class="comment">//找最左边 </span></span><br><span class="line">    t = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = m<span class="number">-1</span>; i &gt;= <span class="number">0</span>; --i)<span class="comment">//最右边 </span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(t &gt; <span class="number">0</span> &amp;&amp; h[s[t<span class="number">-1</span>]] &gt;= h[i])</span><br><span class="line">            t--;</span><br><span class="line">        <span class="keyword">if</span>(t == <span class="number">0</span>) R[i] = m<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">else</span> R[i] = s[t<span class="number">-1</span>]<span class="number">-1</span>;</span><br><span class="line">        s[t++] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m;  ++i)</span><br><span class="line">        ret = max(ret,h[i]*(R[i]-L[i]+<span class="number">1</span>));</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(h,<span class="number">0</span>,<span class="keyword">sizeof</span>(h));</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; ++j)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;num);</span><br><span class="line">                <span class="keyword">if</span>(num==<span class="number">1</span>)h[j]++;</span><br><span class="line">                <span class="keyword">else</span> h[j]=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            res = max(res,solve());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,res);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">4 5</span></span><br><span class="line"><span class="comment">0 1 1 0 1</span></span><br><span class="line"><span class="comment">0 1 1 1 1</span></span><br><span class="line"><span class="comment">0 0 1 1 0</span></span><br><span class="line"><span class="comment">0 0 1 1 1</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,ans;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> <span class="built_in">map</span>[<span class="number">2333</span>][<span class="number">2333</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> h[<span class="number">2333</span>][<span class="number">2333</span>],sta[<span class="number">2333</span>],L[<span class="number">2333</span>],R[<span class="number">2333</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//h[i][j]:第i行第j列元素往上最长的连续1长度</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//维护单调非递减栈</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> row)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> top = <span class="number">0</span>,tmp;</span><br><span class="line"></span><br><span class="line">h[row][m+<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= m + <span class="number">1</span>;j ++) </span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>) </span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">tmp = sta[top];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(h[row][tmp] &lt;= h[row][j]) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//以j作为延伸点，确定边界，保证单调性。 </span></span><br><span class="line"></span><br><span class="line">R[tmp] = j;</span><br><span class="line"></span><br><span class="line">-- top;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">L[j] = tmp;</span><br><span class="line"></span><br><span class="line">sta[++top] = j;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= m;j ++) </span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">map</span>[row][j] == <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> len = R[j] - L[j] - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">ans = max(ans,h[row][j] * len);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m) != EOF) </span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i ++) </span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= m;j ++) </span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;<span class="built_in">map</span>[i][j]);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">memset</span>(h,<span class="number">0</span>,<span class="keyword">sizeof</span>(h));</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= m;j ++) </span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i ++) </span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">map</span>[i][j] == <span class="number">1</span>) </span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">h[i][j] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">map</span>[++i][j] == <span class="number">1</span>) h[i][j] = h[i<span class="number">-1</span>][j] + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">-- i;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i ++) init(i);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;A-计蒜客-T1381&quot;&gt;&lt;a href=&quot;#A-计蒜客-T1381&quot; class=&quot;headerlink&quot; title=&quot;A.计蒜客 - T1381&quot;&gt;&lt;/a&gt;A.计蒜客 - T1381&lt;/h2&gt;&lt;p&gt;输出hello world&lt;br&gt;万恶之源&lt;/p&gt;
&lt;h2 id=&quot;B-51Nod-2060&quot;&gt;&lt;a href=&quot;#B-51Nod-2060&quot; class=&quot;headerlink&quot; title=&quot;B.51Nod - 2060&quot;&gt;&lt;/a&gt;B.51Nod - 2060&lt;/h2&gt;&lt;p&gt;全排列输出&lt;br&gt;不要用STL的next_permutation,会超时&lt;/p&gt;
    
    </summary>
    
    
      <category term="题解" scheme="http://Jozky.top/categories/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="比赛" scheme="http://Jozky.top/categories/%E9%A2%98%E8%A7%A3/%E6%AF%94%E8%B5%9B/"/>
    
      <category term="一起开心" scheme="http://Jozky.top/categories/%E9%A2%98%E8%A7%A3/%E6%AF%94%E8%B5%9B/%E4%B8%80%E8%B5%B7%E5%BC%80%E5%BF%83/"/>
    
    
      <category term="一起开心" scheme="http://Jozky.top/tags/%E4%B8%80%E8%B5%B7%E5%BC%80%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>hdu-1171 Big Event in HDU</title>
    <link href="http://jozky.top/2020/06/16/hdu-1171-Big-Event-in-HDU/"/>
    <id>http://jozky.top/2020/06/16/hdu-1171-Big-Event-in-HDU/</id>
    <published>2020-06-16T14:41:25.000Z</published>
    <updated>2020-06-16T14:44:25.634Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1171" target="_blank" rel="noopener">hdu试题链接</a><br>@[toc]</p><h2 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h2><blockquote><p>Nowadays, we all know that Computer College is the biggest department<br>in HDU. But, maybe you don’t know that Computer College had ever been<br>split into Computer College and Software College in 2002. </p><a id="more"></a> The<p>splitting is absolutely a big event in HDU! At the same time, it is a<br>trouble thing too. All facilities must go halves. First, all<br>facilities are assessed, and two facilities are thought to be same if<br>they have the same value. It is assumed that there is N (0&lt;N&lt;1000)<br>kinds of facilities (different value, different kinds).</p></blockquote><p>Input</p><blockquote><p>Input contains multiple test cases. Each test case starts with a<br>number N (0 &lt; N &lt;= 50 – the total number of different facilities).<br>The next N lines contain an integer V (0&lt;V&lt;=50 –value of facility)<br>and an integer M (0&lt;M&lt;=100 –corresponding number of the facilities)<br>each. You can assume that all V are different. A test case starting<br>with a negative integer terminates input and this test case is not to<br>be processed.</p></blockquote><p>Output</p><blockquote><p>For each case, print one line containing two integers A and B which<br>denote the value of Computer College and Software College will get<br>respectively. A and B should be as equal as possible. At the same<br>time, you should guarantee that A is not less than B.</p></blockquote><p>Sample Input</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">10</span> <span class="number">1</span></span><br><span class="line"><span class="number">20</span> <span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">10</span> <span class="number">1</span> </span><br><span class="line"><span class="number">20</span> <span class="number">2</span></span><br><span class="line"><span class="number">30</span> <span class="number">1</span></span><br><span class="line"><span class="number">-1</span></span><br></pre></td></tr></table></figure><p>Sample Output</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">20</span> <span class="number">10</span></span><br><span class="line"><span class="number">40</span> <span class="number">40</span></span><br></pre></td></tr></table></figure><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p>有n个物品，每个物品都有价值和个数，要把这些物品分成两份，尽可能使得这两份相等，如果不相同就要保证第一份不小于第二份。答案是分别输出两份的价值</p><h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><p>混合背包的题目，我这篇讲<a href="https://blog.csdn.net/qq_35975367/article/details/106794526" target="_blank" rel="noopener">hdu 1059 Dividing</a>的题解几乎和这样是一样的，就是读入方式不一样，稍微改一改代码就可以<br>这可以当做是模板题吧，建议熟读（滑稽）</p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">8</span>];</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">120005</span>];</span><br><span class="line"><span class="keyword">int</span> v[<span class="number">140</span>],m[<span class="number">120</span>];</span><br><span class="line"><span class="keyword">bool</span> f=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">zerone</span><span class="params">(<span class="keyword">int</span> cost,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=sum;i&gt;=cost;i--)</span><br><span class="line">&#123;</span><br><span class="line">dp[i]=max(dp[i],dp[i-cost]+val);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">complet</span><span class="params">(<span class="keyword">int</span> cost)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=cost;i&lt;=sum;i++)</span><br><span class="line">dp[i]=max(dp[i],dp[i-cost]+cost);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> cost,<span class="keyword">int</span> val,<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(cost*num&gt;=sum)</span><br><span class="line">&#123;</span><br><span class="line">complet(cost);</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=num;i&lt;&lt;=<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">zerone(i*cost,i*val);</span><br><span class="line">num-=i;</span><br><span class="line">&#125;</span><br><span class="line">zerone(num*cost,num*val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&amp;&amp;n&gt;=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> sum1;</span><br><span class="line">sum1=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line"><span class="built_in">memset</span>(v,<span class="number">0</span>,<span class="keyword">sizeof</span>(v));</span><br><span class="line"><span class="built_in">memset</span>(m,<span class="number">0</span>,<span class="keyword">sizeof</span>(m));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;v[i]&gt;&gt;m[i];</span><br><span class="line">sum1+=v[i]*m[i];</span><br><span class="line">&#125;</span><br><span class="line">sum=sum1/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">mul(v[i],v[i],m[i]);<span class="comment">//花费，价值，数量 </span></span><br><span class="line">&#125;</span><br><span class="line">sum=max(dp[sum],sum1-dp[sum]);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="string">" "</span>&lt;&lt;sum1-sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">10 1</span></span><br><span class="line"><span class="comment">20 1</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">10 1 </span></span><br><span class="line"><span class="comment">20 2</span></span><br><span class="line"><span class="comment">30 1</span></span><br><span class="line"><span class="comment">-1</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=1171&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hdu试题链接&lt;/a&gt;&lt;br&gt;@[toc]&lt;/p&gt;
&lt;h2 id=&quot;Problem-Description&quot;&gt;&lt;a href=&quot;#Problem-Description&quot; class=&quot;headerlink&quot; title=&quot;Problem Description&quot;&gt;&lt;/a&gt;Problem Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Nowadays, we all know that Computer College is the biggest department&lt;br&gt;in HDU. But, maybe you don’t know that Computer College had ever been&lt;br&gt;split into Computer College and Software College in 2002. &lt;/p&gt;
    
    </summary>
    
    
      <category term="题解" scheme="http://Jozky.top/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="dp" scheme="http://Jozky.top/tags/dp/"/>
    
      <category term="背包问题" scheme="http://Jozky.top/tags/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    
      <category term="混合背包" scheme="http://Jozky.top/tags/%E6%B7%B7%E5%90%88%E8%83%8C%E5%8C%85/"/>
    
      <category term="二进制优化" scheme="http://Jozky.top/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>hdu 1059 Dividing</title>
    <link href="http://jozky.top/2020/06/16/hdu-1059-Dividing/"/>
    <id>http://jozky.top/2020/06/16/hdu-1059-Dividing/</id>
    <published>2020-06-16T14:41:15.000Z</published>
    <updated>2020-06-16T14:44:18.676Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1059" target="_blank" rel="noopener">Hdu链接</a><br><a href="https://ac.nowcoder.com/acm/problem/105611" target="_blank" rel="noopener">牛客网链接</a><br>@[toc]</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><img src="https://img-blog.csdnimg.cn/2020061620152084.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTc1MzY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><a id="more"></a> <p>输入描述:<br><img src="https://img-blog.csdnimg.cn/20200616201546929.png" alt="在这里插入图片描述"><br>输出描述:<br><img src="https://img-blog.csdnimg.cn/20200616201556645.png" alt="在这里插入图片描述"><br>示例1<br>输入</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span> </span><br><span class="line"><span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> </span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Collection #<span class="number">1</span>:</span><br><span class="line">Can<span class="number">'</span>t be divided.</span><br><span class="line"></span><br><span class="line">Collection #<span class="number">2</span>:</span><br><span class="line">Can be divided.</span><br></pre></td></tr></table></figure><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p>有价值分别是1~6的6种大理石，每种大理石的数量是ni，问能否将这些大理石分成完全相同的两部分？</p><h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><p>这个题和<a href="https://blog.csdn.net/qq_35975367/article/details/106783250" target="_blank" rel="noopener">hdu 2844 Coins</a>做法基本一样，不过本题要稍微转变下思路<br>我们考虑用背包方法来做，题目给了数量，价值，却没有给总容量和体积。我们结合题意思考一下，要分成价值完全相同的两份，其实就是找到一份大理石，使得这一份的价值是总价值的一半。如果我们这样想，我们就会发现，总容量其实就是大理石总价值的一半，每个大理石的体积就是其价值，我们要做的就是找到“一些商品使得其体积满足总容量一半的情况是否存在”，这不就可以用混合背包来做。<br>对于数量多的用完全背包，对于数量少的用多重背包</p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">8</span>];</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">120005</span>];</span><br><span class="line"><span class="keyword">bool</span> f=<span class="number">0</span>;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">zerone</span><span class="params">(<span class="keyword">int</span> cost,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=sum;i&gt;=cost;i--)</span><br><span class="line">&#123;</span><br><span class="line">dp[i]=max(dp[i],dp[i-cost]+val);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">complet</span><span class="params">(<span class="keyword">int</span> cost)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=cost;i&lt;=sum;i++)</span><br><span class="line">dp[i]=max(dp[i],dp[i-cost]+cost);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> cost,<span class="keyword">int</span> val,<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(cost*num&gt;=sum)</span><br><span class="line">&#123;</span><br><span class="line">complet(cost);</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=num;i&lt;&lt;=<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">zerone(i*cost,i*val);</span><br><span class="line">num-=i;</span><br><span class="line">&#125;</span><br><span class="line">zerone(num*cost,num*val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> case1=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;a[<span class="number">1</span>]&gt;&gt;a[<span class="number">2</span>]&gt;&gt;a[<span class="number">3</span>]&gt;&gt;a[<span class="number">4</span>]&gt;&gt;a[<span class="number">5</span>]&gt;&gt;a[<span class="number">6</span>])</span><br><span class="line">&#123;</span><br><span class="line">case1++;</span><br><span class="line"></span><br><span class="line">f=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line"><span class="keyword">if</span>(a[<span class="number">1</span>]==<span class="number">0</span>&amp;&amp;a[<span class="number">2</span>]==<span class="number">0</span>&amp;&amp;a[<span class="number">3</span>]==<span class="number">0</span>&amp;&amp;a[<span class="number">4</span>]==<span class="number">0</span>&amp;&amp;a[<span class="number">5</span>]==<span class="number">0</span>&amp;&amp;a[<span class="number">6</span>]==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Collection #%d:\n"</span>,case1);</span><br><span class="line">sum=a[<span class="number">1</span>]*<span class="number">1</span>+<span class="number">2</span>*a[<span class="number">2</span>]+<span class="number">3</span>*a[<span class="number">3</span>]+<span class="number">4</span>*a[<span class="number">4</span>]+<span class="number">5</span>*a[<span class="number">5</span>]+<span class="number">6</span>*a[<span class="number">6</span>];</span><br><span class="line"><span class="keyword">if</span>(sum%<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Can't be divided.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">sum/=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">6</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">mul(i,i,a[i]);<span class="comment">//花费，价值，数量 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(dp[sum]==sum)f=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(f==<span class="number">1</span>)<span class="built_in">cout</span>&lt;&lt;<span class="string">"Can be divided."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"Can't be divided."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=1059&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hdu链接&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/problem/105611&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;牛客网链接&lt;/a&gt;&lt;br&gt;@[toc]&lt;/p&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/2020061620152084.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTc1MzY3,size_16,color_FFFFFF,t_70&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="题解" scheme="http://Jozky.top/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="dp" scheme="http://Jozky.top/tags/dp/"/>
    
      <category term="背包问题" scheme="http://Jozky.top/tags/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    
      <category term="混合背包" scheme="http://Jozky.top/tags/%E6%B7%B7%E5%90%88%E8%83%8C%E5%8C%85/"/>
    
      <category term="二进制优化" scheme="http://Jozky.top/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>hdu-2844 Coins</title>
    <link href="http://jozky.top/2020/06/16/hdu-2844-Coins/"/>
    <id>http://jozky.top/2020/06/16/hdu-2844-Coins/</id>
    <published>2020-06-16T14:41:06.000Z</published>
    <updated>2020-06-16T14:45:28.330Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2844" target="_blank" rel="noopener">HDU链接</a><br><a href="https://ac.nowcoder.com/acm/problem/51167" target="_blank" rel="noopener">牛客网链接</a><br>@[toc]<br>出于种种原因，最近很少更新博客了，虽然一直在更新csdn。。。<br>从现在开始继续更新博客，坚持不断更</p><a id="more"></a> <h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p><img src="https://img-blog.csdnimg.cn/20200616110800256.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTc1MzY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>输入描述:<br><img src="https://img-blog.csdnimg.cn/20200616110821261.png" alt="在这里插入图片描述"><br>输出描述:</p><blockquote><p>For each test case output the answer on a single line.</p></blockquote><p>输入</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span> <span class="number">10</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">4</span> <span class="number">2</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">2</span> <span class="number">5</span></span><br><span class="line"><span class="number">1</span> <span class="number">4</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p>有n种硬币，面额分别是Ai，每种硬币数量分别是Ci，问这些硬币能组成1~m中多少个数？<br>样例分析：<br>3 10<br>1 2 4 2 1 1<br>有2个一元，1个两元，1个四元，可以组成1,2，3，4,5，6，7,8，（9和10无法组成）能组成的一共八个</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>如果还没学习背包问题的知识，<a href="https://blog.csdn.net/qq_35975367/article/details/106759161" target="_blank" rel="noopener">看这里</a><br>混合背包问题<br>可以用二进制的方法来优化<br>背包问题中常见的三个元素：体积（所占容量），价值，数量<br>在本题中，硬币的价值即是体积也是价值A[i]，数量为硬币的数量C[i]<br>容量上限是m<br>当c<em>a&gt;m时，也就是一种货币的金额就超过m时，我们可以当做是完全背包，即将这种货币看做无数个，因为货币的数量乘以金额已经超过上限，所以再多也没有影响。这一部分用完全背包的做法<br>当c</em>a&lt;m时，我们就当做多重背包来做，将多重背包进行二进制优化，用01背包的解法来做<br>具体看代码：</p><h2 id="（代码）"><a href="#（代码）" class="headerlink" title="（代码）"></a>（代码）</h2><p>含详细讲解</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> dp[maxn];</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">120</span>],c[<span class="number">120</span>];</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">zeroone</span><span class="params">(<span class="keyword">int</span> cost,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=m;i&gt;=cost;i--)</span><br><span class="line">&#123;</span><br><span class="line">dp[i]=max(dp[i],dp[i-cost]+val);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">wanquanbeibao</span><span class="params">(<span class="keyword">int</span> cost,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=cost;i&lt;=m;i++)dp[i]=max(dp[i],dp[i-cost]+val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> cost,<span class="keyword">int</span> val,<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(cost*num&gt;=m)wanquanbeibao(cost,val);<span class="comment">//完全背包不必考虑数量</span></span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=num;i&lt;&lt;=<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">zeroone(i*cost,i*val);<span class="comment">//乘以对应的系数 </span></span><br><span class="line">num-=i; </span><br><span class="line">&#125;</span><br><span class="line">zeroone(num*cost,num*val);<span class="comment">//剩余部分处理 </span></span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m&amp;&amp;(n+m))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">cin</span>&gt;&gt;c[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">cal(a[i],a[i],c[i]);<span class="comment">//花费，价值，数量 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(dp[i]==i)sum++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=2844&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;HDU链接&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/problem/51167&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;牛客网链接&lt;/a&gt;&lt;br&gt;@[toc]&lt;br&gt;出于种种原因，最近很少更新博客了，虽然一直在更新csdn。。。&lt;br&gt;从现在开始继续更新博客，坚持不断更&lt;/p&gt;
    
    </summary>
    
    
      <category term="题解" scheme="http://Jozky.top/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="dp" scheme="http://Jozky.top/tags/dp/"/>
    
      <category term="背包问题" scheme="http://Jozky.top/tags/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    
      <category term="混合背包" scheme="http://Jozky.top/tags/%E6%B7%B7%E5%90%88%E8%83%8C%E5%8C%85/"/>
    
      <category term="二进制优化" scheme="http://Jozky.top/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>求组合数C(n,m) % mod的几种方法</title>
    <link href="http://jozky.top/2020/04/29/%E6%B1%82%E7%BB%84%E5%90%88%E6%95%B0C-n-m-mod%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
    <id>http://jozky.top/2020/04/29/%E6%B1%82%E7%BB%84%E5%90%88%E6%95%B0C-n-m-mod%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</id>
    <published>2020-04-29T15:23:01.000Z</published>
    <updated>2020-04-29T15:35:20.202Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/cutedumpling/article/details/81840047?utm_source=distribute.pc_relevant.none-task-blog-baidujs-1" target="_blank" rel="noopener">转载</a></p><p>@[TOC]</p><h2 id="算法一：乘法逆元，在m-n和mod比较小的情况下适用"><a href="#算法一：乘法逆元，在m-n和mod比较小的情况下适用" class="headerlink" title="算法一：乘法逆元，在m,n和mod比较小的情况下适用"></a>算法一：乘法逆元，在m,n和mod比较小的情况下适用</h2><p>乘法逆元：（a/b）% mod = a * b^(mod-2)，mod为素数<br><img src="https://img-blog.csdnimg.cn/20200429232308242.png" alt="在这里插入图片描述"></p><a id="more"></a><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">9982</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function">LL <span class="title">pow</span><span class="params">(LL x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LL n = MOD<span class="number">-2</span>; </span><br><span class="line">    LL res=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(n&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">if</span>(n &amp; <span class="number">1</span>)</span><br><span class="line">    res=res*x%MOD;</span><br><span class="line">   x=x*x%MOD;</span><br><span class="line">   n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res%MOD;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="function">LL <span class="title">C</span><span class="params">(LL n,LL m)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">if</span>(m &lt; <span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">if</span>(n &lt; m)<span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">if</span>(m &gt; n-m) m = n-m;  </span><br><span class="line"> </span><br><span class="line">    LL up = <span class="number">1</span>, down = <span class="number">1</span>;  </span><br><span class="line">    <span class="keyword">for</span>(LL i = <span class="number">0</span> ; i &lt; m ; i ++)&#123;  </span><br><span class="line">        up = up * (n-i) % MOD;  <span class="comment">//分子 </span></span><br><span class="line">        down = down * (i+<span class="number">1</span>) % MOD;  <span class="comment">//分母 </span></span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> up * <span class="built_in">pow</span>(down) % MOD;  <span class="comment">//乘法逆元 </span></span><br><span class="line">&#125;  </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">LL ans = C(n,m)%MOD; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="算法二：Lucas定理-乘法逆元，适用于mod为素数且大小为10-5左右"><a href="#算法二：Lucas定理-乘法逆元，适用于mod为素数且大小为10-5左右" class="headerlink" title="算法二：Lucas定理 + 乘法逆元，适用于mod为素数且大小为10^5左右"></a>算法二：Lucas定理 + 乘法逆元，适用于mod为素数且大小为10^5左右</h2><p>**Lucas定理：我们令 n = tp + r , m = sp + q .（q ，r ≤p）,那么 <img src="https://private.codecogs.com/gif.latex?C_%7Btp&plus;r%7D%5E%7Bsp%20&plus;%20q%7D%20%5Cequiv%20C%20_%7Bt%7D%5E%7Bs%7DC%20_%7Br%7D%5E%7Bq%7D%28mod%28p%29%29" alt="在这里插入图片描述"></p><p>即：Lucas(n,m,p)=C(n%p,m%p)<em>Lucas(n/p,m/p,p)*</em></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">100000</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function">LL <span class="title">pow</span><span class="params">(LL x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL n = MOD<span class="number">-2</span>; </span><br><span class="line">    LL res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">       <span class="keyword">if</span>(n &amp; <span class="number">1</span>)    </span><br><span class="line">            res=res*x%MOD;</span><br><span class="line">       x=x*x%MOD;</span><br><span class="line">       n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res%MOD;    </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function">LL <span class="title">C</span><span class="params">(LL n,LL m)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">if</span>(m &lt; <span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">if</span>(n &lt; m)<span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">if</span>(m &gt; n-m) m = n-m;  </span><br><span class="line"> </span><br><span class="line">    LL up = <span class="number">1</span>, down = <span class="number">1</span>;  </span><br><span class="line">    <span class="keyword">for</span>(LL i = <span class="number">0</span> ; i &lt; m ; i ++)&#123;  </span><br><span class="line">        up = up * (n-i) % MOD;  <span class="comment">//分子 </span></span><br><span class="line">        down = down * (i+<span class="number">1</span>) % MOD;  <span class="comment">//分母 </span></span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> up * <span class="built_in">pow</span>(down) % MOD;  <span class="comment">//乘法逆元 </span></span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//当n和m比较大，mod是素数且比较小的时候（10^5左右），通过Lucas定理计算</span></span><br><span class="line"><span class="function">LL <span class="title">Lucas</span><span class="params">(LL n, LL m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(m == <span class="number">0</span>)    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> C(n%MOD,m%MOD)*Lucas(n/MOD,m/MOD)%MOD;    </span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T,n,m;</span><br><span class="line">    LL ans;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">        ans = Lucas(n,m)%MOD;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="算法三：预处理-乘法逆元，适用于mod为素数且比较大的时候（超过10-5）"><a href="#算法三：预处理-乘法逆元，适用于mod为素数且比较大的时候（超过10-5）" class="headerlink" title="算法三：预处理 + 乘法逆元，适用于mod为素数且比较大的时候（超过10^5）"></a>算法三：预处理 + 乘法逆元，适用于mod为素数且比较大的时候（超过10^5）</h2><p><strong>预处理的时候注意: m!的MOD次方 = (m-1)!的MOD次方 * m的MOD次方</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 1000000</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">998244353</span>;</span><br><span class="line"> </span><br><span class="line">LL fact[maxn+<span class="number">5</span>];<span class="comment">//阶乘 </span></span><br><span class="line">LL a[maxn+<span class="number">10</span>];<span class="comment">// 乘法逆元 </span></span><br><span class="line"><span class="comment">//LL inv[maxn+10];//快速幂 </span></span><br><span class="line"> </span><br><span class="line"><span class="function">LL <span class="title">pow</span><span class="params">(LL x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LL n = MOD<span class="number">-2</span>;</span><br><span class="line">    LL res=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(n&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">1</span>)</span><br><span class="line">    res=res*x%MOD;</span><br><span class="line">   x=x*x%MOD;</span><br><span class="line">   n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    a[<span class="number">0</span>] = a[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    fact[<span class="number">0</span>] = fact[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//  inv[1] = 1;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">1000005</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        fact[i] = fact[i<span class="number">-1</span>] * i % MOD;</span><br><span class="line">a[i] = a[i<span class="number">-1</span>] * <span class="built_in">pow</span>(i) % MOD;<span class="comment">//m!的MOD次方 = (m-1)!的MOD次方 * m的MOD次方 </span></span><br><span class="line"><span class="comment">//      inv[i] = (MOD - MOD/i)*inv[MOD%i]%MOD;</span></span><br><span class="line"><span class="comment">//      a[i] = a[i-1] * inv[i] % MOD;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function">LL <span class="title">C</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>&#123;<span class="comment">//乘法逆元 </span></span><br><span class="line"><span class="keyword">if</span>(n&lt;<span class="number">0</span>||m&lt;<span class="number">0</span>||n&lt;m)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> fact[n]*a[n-m]%MOD*a[m]%MOD;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T,n,m;</span><br><span class="line">LL ans;</span><br><span class="line">init();<span class="comment">//预处理 </span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">ans = C(n,m)%MOD;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/cutedumpling/article/details/81840047?utm_source=distribute.pc_relevant.none-task-blog-baidujs-1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;转载&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;@[TOC]&lt;/p&gt;
&lt;h2 id=&quot;算法一：乘法逆元，在m-n和mod比较小的情况下适用&quot;&gt;&lt;a href=&quot;#算法一：乘法逆元，在m-n和mod比较小的情况下适用&quot; class=&quot;headerlink&quot; title=&quot;算法一：乘法逆元，在m,n和mod比较小的情况下适用&quot;&gt;&lt;/a&gt;算法一：乘法逆元，在m,n和mod比较小的情况下适用&lt;/h2&gt;&lt;p&gt;乘法逆元：（a/b）% mod = a * b^(mod-2)，mod为素数&lt;br&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200429232308242.png&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据结构" scheme="http://Jozky.top/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法讲解" scheme="http://Jozky.top/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AE%97%E6%B3%95%E8%AE%B2%E8%A7%A3/"/>
    
    
      <category term="组合数" scheme="http://Jozky.top/tags/%E7%BB%84%E5%90%88%E6%95%B0/"/>
    
      <category term="取模运算" scheme="http://Jozky.top/tags/%E5%8F%96%E6%A8%A1%E8%BF%90%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>第一次cf之旅</title>
    <link href="http://jozky.top/2020/04/22/%E7%AC%AC%E4%B8%80%E6%AC%A1cf%E4%B9%8B%E6%97%85/"/>
    <id>http://jozky.top/2020/04/22/%E7%AC%AC%E4%B8%80%E6%AC%A1cf%E4%B9%8B%E6%97%85/</id>
    <published>2020-04-21T16:24:30.000Z</published>
    <updated>2020-04-21T16:24:52.005Z</updated>
    
    <content type="html"><![CDATA[<p>之前一直想打cf，但都感觉自己太弱了，而且没有科学上网的途径。。。<br>后来知道今天有Codeforces Round #636 (Div. 3)，说不是很难，决定参加试试<br>网太卡（无奈），实在是不稳定，没办法<br>感觉前三个题目还是挺简单的，思维题，多活动大脑就能想明白。后三就还没看。。网卡，过夜，明天一早有课，最终选择放弃(笑哭）<br>还有不知道dev怎么了突然抽筋了，关键时候上不了场，还是codeblock救的场</p><a id="more"></a><p><img src="https://img-blog.csdnimg.cn/20200421235933360.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200422000347503.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTc1MzY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200422000415259.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTc1MzY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前一直想打cf，但都感觉自己太弱了，而且没有科学上网的途径。。。&lt;br&gt;后来知道今天有Codeforces Round #636 (Div. 3)，说不是很难，决定参加试试&lt;br&gt;网太卡（无奈），实在是不稳定，没办法&lt;br&gt;感觉前三个题目还是挺简单的，思维题，多活动大脑就能想明白。后三就还没看。。网卡，过夜，明天一早有课，最终选择放弃(笑哭）&lt;br&gt;还有不知道dev怎么了突然抽筋了，关键时候上不了场，还是codeblock救的场&lt;/p&gt;
    
    </summary>
    
    
      <category term="文章" scheme="http://Jozky.top/categories/%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="随笔" scheme="http://Jozky.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>欧拉序与DFS序</title>
    <link href="http://jozky.top/2020/04/20/%E6%AC%A7%E6%8B%89%E5%BA%8F%E4%B8%8EDFS%E5%BA%8F/"/>
    <id>http://jozky.top/2020/04/20/%E6%AC%A7%E6%8B%89%E5%BA%8F%E4%B8%8EDFS%E5%BA%8F/</id>
    <published>2020-04-20T13:39:31.000Z</published>
    <updated>2020-04-20T13:40:42.425Z</updated>
    
    <content type="html"><![CDATA[<p>@[TOC]<br>欧拉序与DFS序相似又不同</p><p>欧拉序的定义<br>树在dfs过程中的节点访问顺序称为欧拉序.<br>那有人会问：dfs序和欧拉序啥区别？</p><p>dfs序：是指将一棵树被dfs时所经过的节点顺序（不绕回原点）。<br>欧拉序：就是从根结点出发，按dfs的顺序在绕回原点所经过所有点的顺序。</p><a id="more"></a><p><img src="https://img-blog.csdnimg.cn/20200420152716218.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTc1MzY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>欧拉序与dfs序不同地方在于，欧拉序中每个节点可以出现多次，比如进入一次退出一次，又比如每次回溯时记录一次。<br> 代码：</p><p>s[maxn]存放“入时间戳”，e[maxn]存放“出时间戳”；</p><h2 id="DFS序"><a href="#DFS序" class="headerlink" title="DFS序"></a>DFS序</h2><p>核心代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; g[maxn]; <span class="comment">//存放节点</span></span><br><span class="line"><span class="keyword">int</span> s[maxn], e[maxn];<span class="comment">//s[maxn]存放“入时间戳”，e[maxn]存放“出时间戳”；</span></span><br><span class="line"><span class="keyword">int</span> n,id,len;</span><br><span class="line"><span class="keyword">int</span> dfsxu[<span class="number">20000</span>];<span class="comment">//存放dfs序</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> fa)</span> </span>&#123;</span><br><span class="line">s[u] = ++id;</span><br><span class="line">dfsxu[++len]=u;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; g[u].size(); ++i) &#123;</span><br><span class="line"><span class="keyword">int</span> v = g[u][i];</span><br><span class="line"><span class="keyword">if</span>(v == fa) <span class="keyword">continue</span>;</span><br><span class="line">dfs(v, u);</span><br><span class="line">&#125;</span><br><span class="line">e[u] = id;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>完整代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; g[maxn]; <span class="comment">//存放节点</span></span><br><span class="line"><span class="keyword">int</span> s[maxn], e[maxn];<span class="comment">//s[maxn]存放“入时间戳”，e[maxn]存放“出时间戳”；</span></span><br><span class="line"><span class="keyword">int</span> n,id,len;</span><br><span class="line"><span class="keyword">int</span> dfsxu[<span class="number">20000</span>];<span class="comment">//存放dfs序</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> fa)</span> </span>&#123;</span><br><span class="line">s[u] = ++id;</span><br><span class="line">dfsxu[++len]=u;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; g[u].size(); ++i) &#123;</span><br><span class="line"><span class="keyword">int</span> v = g[u][i];</span><br><span class="line"><span class="keyword">if</span>(v == fa) <span class="keyword">continue</span>;</span><br><span class="line">dfs(v, u);</span><br><span class="line">&#125;</span><br><span class="line">e[u] = id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(s,<span class="number">0</span>,<span class="keyword">sizeof</span>(s));</span><br><span class="line">    <span class="built_in">memset</span>(e,<span class="number">0</span>,<span class="keyword">sizeof</span>(e));</span><br><span class="line">    <span class="built_in">memset</span>(dfsxu,<span class="number">0</span>,<span class="keyword">sizeof</span>(dfsxu));</span><br><span class="line">ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line"><span class="keyword">int</span> u, v;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; u &gt;&gt; v;</span><br><span class="line">g[u].push_back(v);</span><br><span class="line">g[v].push_back(u);</span><br><span class="line">&#125;</span><br><span class="line">id = <span class="number">0</span>;</span><br><span class="line">dfs(<span class="number">1</span>, <span class="number">-1</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"DFS序:"</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;s[i]!=<span class="number">0</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;dfsxu[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"入时间戳:"</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;s[i]!=<span class="number">0</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;s[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"出时间戳:"</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;e[i]!=<span class="number">0</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;e[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="欧拉序"><a href="#欧拉序" class="headerlink" title="欧拉序"></a>欧拉序</h2><p>核心代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; g[<span class="number">40010</span>]; <span class="comment">//存放节点</span></span><br><span class="line"><span class="keyword">int</span> oulaxu[<span class="number">80020</span>]; <span class="comment">//存放欧拉序在，在欧拉序中第一次出现为“入时间戳”，第二次出现为“出时间戳”。</span></span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    oulaxu[++len]=u;</span><br><span class="line">    <span class="keyword">int</span> sz=g[u].size();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;sz; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(g[u][i]!=fa)</span><br><span class="line">            dfs(g[u][i],u);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    oulaxu[++len]=u;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>完整代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; g[<span class="number">40010</span>]; <span class="comment">//存放节点</span></span><br><span class="line"><span class="keyword">int</span> oulaxu[<span class="number">80020</span>]; <span class="comment">//存放欧拉序在，在欧拉序中第一次出现为“入时间戳”，第二次出现为“出时间戳”。</span></span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    oulaxu[++len]=u;</span><br><span class="line">    <span class="keyword">int</span> sz=g[u].size();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;sz; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(g[u][i]!=fa)</span><br><span class="line">            dfs(g[u][i],u);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    oulaxu[++len]=u;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        len=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span>(oulaxu,<span class="number">0</span>,<span class="keyword">sizeof</span>(oulaxu));</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            g[i].clear();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n<span class="number">-1</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> from,to;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;from,&amp;to);</span><br><span class="line">            g[from].push_back(to);</span><br><span class="line">            g[to].push_back(from);</span><br><span class="line">        &#125;</span><br><span class="line">        dfs(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>,oulaxu[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;@[TOC]&lt;br&gt;欧拉序与DFS序相似又不同&lt;/p&gt;
&lt;p&gt;欧拉序的定义&lt;br&gt;树在dfs过程中的节点访问顺序称为欧拉序.&lt;br&gt;那有人会问：dfs序和欧拉序啥区别？&lt;/p&gt;
&lt;p&gt;dfs序：是指将一棵树被dfs时所经过的节点顺序（不绕回原点）。&lt;br&gt;欧拉序：就是从根结点出发，按dfs的顺序在绕回原点所经过所有点的顺序。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据结构" scheme="http://Jozky.top/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法讲解" scheme="http://Jozky.top/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AE%97%E6%B3%95%E8%AE%B2%E8%A7%A3/"/>
    
    
      <category term="欧拉序" scheme="http://Jozky.top/tags/%E6%AC%A7%E6%8B%89%E5%BA%8F/"/>
    
      <category term="DFS序" scheme="http://Jozky.top/tags/DFS%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>LCA总结</title>
    <link href="http://jozky.top/2020/04/20/LCA%E6%80%BB%E7%BB%93/"/>
    <id>http://jozky.top/2020/04/20/LCA%E6%80%BB%E7%BB%93/</id>
    <published>2020-04-20T08:29:05.000Z</published>
    <updated>2020-04-20T08:32:53.545Z</updated>
    
    <content type="html"><![CDATA[<p>@[TOC]<br><strong>我们通过这个题<a href="https://www.luogu.com.cn/problem/P3379" target="_blank" rel="noopener">洛谷P3379 【模板】最近公共祖先来讲LCA</a></strong></p><h2 id="LCA介绍"><a href="#LCA介绍" class="headerlink" title="LCA介绍"></a>LCA介绍</h2><p>lca是啥？最近公共祖先<br>就是：两个点在这棵树上距离最近的公共祖先节点<br>LCA（x，y）=z，z是x与y的最近公共祖先，（换句话说z的深度要尽可能大）<br>来看一个经典图<br><img src="https://img-blog.csdnimg.cn/20200411230206669.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTc1MzY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><a id="more"></a><p>LCA（4,5）=2<br>LCA（4,3）=1<br>LCA（2,1）=1</p><h2 id="解决方法概括："><a href="#解决方法概括：" class="headerlink" title="解决方法概括："></a>解决方法概括：</h2><p>常用四种方法 ：</p><ol><li>用倍增法求解，预处理复杂度是 O(nlogn) ,每次询问的复杂度是 O(logn), 属于在线解法。</li><li>利用欧拉序转化为RMQ问题，用ST表求解RMQ问题，预处理复杂度 O(n+nlogn)，每次询问的复杂度为 O(1)，也是在线算法。</li><li>采用Tarjan算法求解，复杂度 O(α(n)+Q)，属于离线算法。</li><li>利用树链剖分求解，复杂度预处理O(n)，单次查询 O(logn) ，属于在线算法。</li></ol><h2 id="倍增法："><a href="#倍增法：" class="headerlink" title="倍增法："></a>倍增法：</h2><p>倍增：将两个点调到一个高度之后不断同时向上调到两点重合，即为两点的最近公共祖先<br>所用到的函数： grand[x][i] ,这个数组表示标号为x节点向上跳2^i步的节点<br>例如grand[5][0]=2（上图）, 节点5向上跳2^0^次（1次）到达节点2<br>grand[5][0]就是x的父节点<br>grand[x][1]就是x的父亲节点的父亲节点,就是grand[grand[x][0]][0]<br>这样就能得到一个递推式grand [ x ] [ i ] = grand [ grand [ x ] [ i-1 ] ] [ i-1 ]<br>先让x与y处于同一层，然后一起往上跳<br>跳多少呢？<br>比如dep[u]&gt;dep[v]<br>u要向上爬h=dep[u]-dep[v]，才能和v相同深度<br>将h进行二进制拆分，比如<br>h=(15)<del>10</del>=(1111)<del>2</del><br>h=(5)<del>10</del>=(101)<del>2</del><br>从低位开始i=0，如果是这一位是1，就grand[u][i]<br>任何调动次数都可以用2的指数幂之和来表示O（log n）<br>h = 5 = 2^2^ + 2^0^<br>h = 15 = 2^3^ + 2^2^ + 2^1^ + 2^0^<br>dep[]表示节点的深度<br>一开始跳log<del>2</del>^dep[x]-dep[y]^，log我们可以打表预处理。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lg[<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)lg[i]=lg[i&gt;&gt;<span class="number">1</span>]+<span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>当两点汇合时，就可以返回了<br>查询m组，总的复杂度应该是O(m log n)<br>输入：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">9</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="number">2</span> <span class="number">4</span></span><br><span class="line"><span class="number">2</span> <span class="number">5</span></span><br><span class="line"><span class="number">4</span> <span class="number">7</span></span><br><span class="line"><span class="number">4</span> <span class="number">8</span></span><br><span class="line"><span class="number">3</span> <span class="number">6</span></span><br><span class="line"><span class="number">6</span> <span class="number">9</span></span><br><span class="line"><span class="number">5</span> <span class="number">8</span> </span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 500005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, root;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>, ch = getchar();</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) x = (x &lt;&lt; <span class="number">3</span>) + (x &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>, ch = getchar();</span><br><span class="line"><span class="keyword">return</span> x * f;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> to, nxt;</span><br><span class="line">edge() &#123;&#125;</span><br><span class="line">edge(<span class="keyword">int</span> tt, <span class="keyword">int</span> nn) &#123;to = tt, nxt = nn;&#125;</span><br><span class="line">&#125;e[maxn &lt;&lt; <span class="number">1</span>];</span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> head[maxn], k = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">e[k] = edge(v, head[u]);</span><br><span class="line">head[u] = k++;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> fa[maxn][<span class="number">25</span>], dep[maxn], lg[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> now, <span class="keyword">int</span> fath)</span><span class="comment">//初始化深度及祖祖辈辈</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">dep[now] = dep[fath] + <span class="number">1</span>;</span><br><span class="line">fa[now][<span class="number">0</span>] = fath;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; (<span class="number">1</span> &lt;&lt; i) &lt;= dep[now]; i++)</span><br><span class="line">fa[now][i] = fa[fa[now][i - <span class="number">1</span>]][i - <span class="number">1</span>];<span class="comment">//前文的递推式</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = head[now]; ~i; i = e[i].nxt)</span><br><span class="line"><span class="keyword">if</span>(e[i].to != fath) dfs(e[i].to, now);<span class="comment">//继续往下遍历</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lca</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(dep[x] &lt; dep[y]) swap(x, y);<span class="comment">//保证x的深度更大，跳x</span></span><br><span class="line"><span class="keyword">while</span>(dep[x] &gt; dep[y]) x = fa[x][lg[dep[x] - dep[y]]];</span><br><span class="line"><span class="keyword">if</span>(x == y) <span class="keyword">return</span> x;<span class="comment">//特判</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = lg[dep[x]]; i &gt;= <span class="number">0</span>; i--)<span class="comment">//倍增一起往上跳</span></span><br><span class="line"><span class="keyword">if</span>(fa[x][i] != fa[y][i]) x = fa[x][i], y = fa[y][i];</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> fa[x][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(head, <span class="number">-1</span>, <span class="keyword">sizeof</span> head);</span><br><span class="line">n = read(), m = read(), root = read();</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">int</span> u, v;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">u = read(), v = read();</span><br><span class="line">add(u, v);</span><br><span class="line">add(v, u);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dfs(root, <span class="number">0</span>);</span><br><span class="line">lg[<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)lg[i]=lg[i&gt;&gt;<span class="number">1</span>]+<span class="number">1</span>;</span><br><span class="line"><span class="comment">//for(int i = 1; i &lt;= n; i++)</span></span><br><span class="line"><span class="comment">//lg[i] = lg[i - 1] + (1 &lt;&lt; lg[i - 1] == i);//log打表，后面那一坨是特判一下i是否进位了</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">u = read(), v = read();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, lca(u, v));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Tarjan"><a href="#Tarjan" class="headerlink" title="Tarjan"></a>Tarjan</h2><p>倍增是在线算法<br>Tarjan是离线算法<br><img src="https://img-blog.csdnimg.cn/20200413143549700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTc1MzY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>Tarjan主要用到和并查集差不多的方法<br>比如查询7和5<br>我们从根节点出发，1-&gt;2-&gt;4-&gt;7，发现另一点5还没被查询，然后回溯，再遍历，7-&gt;4-&gt;8-&gt;4-&gt;2-&gt;5,遍历到点5，我们发现另外一个点7已经访问过，就到此结束。在这过程中我们用fa[]来表示父节点，就和并查集一样，回溯时，7-&gt;4 , fa[7]=4 ；8-&gt;4 , fa[8]=4； 4-&gt;2,fa[4]=2； 5-&gt;2,fa[5]=2。<br>这样当发现另外一个点已经标记了，那么这个点的祖先一定是两个点的lca（可以通过路径压缩）<br>在访问一个点时，我们会将与这点相关的一同询问，所以tarjan是强制离线<br>lca用于存结果，每个询问都存了两次（因为还要查询另外一个点是否已经访问过），最后输出时 i * 2<br>每组答案lca[i*2]（i-&gt;m）<br>大概时间复杂度为O(n+m）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 500005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, root, lca[maxn &lt;&lt; <span class="number">1</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>, ch = getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + ch - <span class="string">'0'</span>, ch = getchar();</span><br><span class="line">    <span class="keyword">return</span> x * f;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> to, nxt;</span><br><span class="line">    edge()&#123;&#125;</span><br><span class="line">    edge(<span class="keyword">int</span> tt, <span class="keyword">int</span> nn) &#123;to = tt, nxt = nn;&#125;</span><br><span class="line">&#125;e[maxn &lt;&lt; <span class="number">1</span>], qe[maxn &lt;&lt; <span class="number">1</span>];</span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> head[maxn], k = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[k] = edge(v, head[u]);</span><br><span class="line">    head[u] = k++;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> qhead[maxn], qk = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">qadd</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    qe[qk] = edge(v, qhead[u]);</span><br><span class="line">    qhead[u] = qk++;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> fa[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;<span class="keyword">return</span> fa[x] == x? x : fa[x] = get(fa[x]);&#125;<span class="comment">//记得路径压缩！！</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> v;</span><br><span class="line">    vis[u] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = head[u]; ~i; i = e[i].nxt)<span class="comment">//先深优遍历下去</span></span><br><span class="line">    &#123;</span><br><span class="line">        v = e[i].to;</span><br><span class="line">        <span class="keyword">if</span>(vis[v]) <span class="keyword">continue</span>;<span class="comment">//vis过了，就说明是父亲</span></span><br><span class="line">        tarjan(v);</span><br><span class="line">        fa[v] = u;<span class="comment">//回溯时记录</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = qhead[u]; ~i; i = qe[i].nxt)<span class="comment">//开始扫一遍关于u的所有询问</span></span><br><span class="line">    &#123;</span><br><span class="line">        v = qe[i].to;</span><br><span class="line">        <span class="keyword">if</span>(vis[v])<span class="comment">//另一个点访问过了，可以得出答案了</span></span><br><span class="line">        &#123;</span><br><span class="line">            lca[i] = get(v);</span><br><span class="line">            <span class="keyword">if</span>(i &amp; <span class="number">1</span>) lca[i - <span class="number">1</span>] = lca[i];<span class="comment">//这里特殊处理是因为每个询问存了两次</span></span><br><span class="line">            <span class="keyword">else</span> lca[i + <span class="number">1</span>] = lca[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(head, <span class="number">-1</span>, <span class="keyword">sizeof</span> head);</span><br><span class="line">    <span class="built_in">memset</span>(qhead, <span class="number">-1</span>, <span class="keyword">sizeof</span> qhead);</span><br><span class="line">    n = read(), m = read(), root = read();</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> u, v;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        u = read(), v = read();</span><br><span class="line">        add(u, v);</span><br><span class="line">        add(v, u);</span><br><span class="line">        fa[i] = i;<span class="comment">//顺便初始化fa</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    fa[n] = n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        u = read(), v = read();<span class="comment">//存储询问</span></span><br><span class="line">        qadd(u, v);</span><br><span class="line">        qadd(v, u);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    tarjan(root);<span class="comment">//开始遍历</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, lca[i &lt;&lt; <span class="number">1</span>]);<span class="comment">//每个询问都存了两次，所以要*2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>m较小时用倍增，较大时用Tarjan</strong></p><h2 id="欧拉序"><a href="#欧拉序" class="headerlink" title="欧拉序"></a>欧拉序</h2><p>欧拉序的定义<br>树在dfs过程中的节点访问顺序称为欧拉序.<br>那有人会问：dfs序和欧拉序啥区别？</p><p>dfs序：是指将一棵树被dfs时所经过的节点顺序（不绕回原点）。<br>欧拉序：就是从根结点出发，按dfs的顺序在绕回原点所经过所有点的顺序。</p><p><img src="https://img-blog.csdnimg.cn/20200420152716218.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTc1MzY3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>欧拉序与dfs序不同地方在于，欧拉序中每个节点可以出现多次，比如进入一次退出一次，又比如每次回溯时记录一次。</p><p>因此两个点的LCA，就是在该序列上两个点第一次出现的区间内深度最小的那个点<br>比如求D和E的LCA，D和E第一次出现的区间是DDCBE。这里面深度最小的就是点B，所以LCA（D，E）=B<br>这样就转化为区间RMQ问题，所以可以用ST表。<br>具体怎么做呢？<br>先求出欧拉序和每个节点的深度，同时用start[]记录每个节点第一次出现的位置<br>LCA ( T , u , v ) = RMQ ( B , start ( u ) , start ( v ) )<br> 然后直接用ST表求RMQ就行<br> <a href="https://editor.csdn.net/md/?articleId=105636769" target="_blank" rel="noopener">ST表详解</a> </p><p> 所用到数组：</p><blockquote><p> a.欧拉序：图的遍历（几种存储结构写法不太一样）</p><p>cnt:序列长度（每个元素一进一出共两次，记得最大初始化为2*MAXN）<br>oula[]:欧拉序列，记录编号   dfs前记录一次，dfs后（回溯）再记录一次<br>depth[]:每个编号的深度（也可以记录每个下标的深度，见注释）</p><p>start[]:每个编号第一次出现的序列下标</p><p>b.ST表  </p><p>minl[i][j]    记得第一层初始化为depth[]</p><p>pos[][]最值下标，第一层初始化为i</p><p>注意这里i是欧拉序列的下标，最终要的是编号（这里经常下标搞混！！）</p><p>欧拉序列下标=start【编号】</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> GCC optimize(3)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 500010  </span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;G[N]; </span><br><span class="line"><span class="keyword">int</span> oula[N&lt;&lt;<span class="number">1</span>],depth[N],start[N];<span class="comment">//N*2</span></span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> minl[N&lt;&lt;<span class="number">1</span>][<span class="number">19</span>],pos[N&lt;&lt;<span class="number">1</span>][<span class="number">19</span>],len[N&lt;&lt;<span class="number">1</span>],vis[N],tmp; <span class="comment">//开20以上就TLE，自闭</span></span><br><span class="line"><span class="comment">//struct node&#123;int deep,order;&#125;minl[N][19];</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> n,m,s,x,y;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch=<span class="string">'*'</span>;</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch=getchar()));</span><br><span class="line">    <span class="keyword">int</span> num=ch-<span class="string">'0'</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch=getchar()))num=num*<span class="number">10</span>+ch-<span class="string">'0'</span>;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> now,<span class="keyword">int</span> fa,<span class="keyword">int</span> deep)</span></span>&#123;</span><br><span class="line">    oula[++cnt]=now;<span class="comment">//入 </span></span><br><span class="line">    <span class="comment">//depth[cnt]=deep;</span></span><br><span class="line">    <span class="keyword">if</span>(depth[now]==<span class="number">0</span>)depth[now]=deep;</span><br><span class="line">    <span class="keyword">if</span>(start[now]==<span class="number">0</span>)start[now]=cnt;</span><br><span class="line">    <span class="keyword">int</span> z=G[now].size();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;z;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(G[now][i]!=fa)&#123;</span><br><span class="line">            dfs(G[now][i],now,deep+<span class="number">1</span>);</span><br><span class="line">            oula[++cnt]=now;<span class="comment">//出 </span></span><br><span class="line">            <span class="comment">//depth[cnt]=deep;</span></span><br><span class="line">            <span class="comment">//index[now]=cnt;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">S_table</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">2</span>*N;++i) len[i]=(<span class="number">1</span>&lt;&lt;(tmp+<span class="number">1</span>))==i?++tmp:tmp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++) minl[i][<span class="number">0</span>]= depth[oula[i]],pos[i][<span class="number">0</span>]=i;<span class="comment">//depth[i]</span></span><br><span class="line">    <span class="comment">//int l = log2((double)cnt);</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;(<span class="number">1</span>&lt;&lt;j)&lt;=cnt;j++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i + (<span class="number">1</span> &lt;&lt; (j<span class="number">-1</span>) ) - <span class="number">1</span> &lt;=cnt;++i)&#123;</span><br><span class="line">            <span class="comment">//minl[i][j] = min(minl[i][j-1], minl[i + (1 &lt;&lt; (j-1) )][j-1]);</span></span><br><span class="line">          <span class="keyword">if</span>(minl[i][j<span class="number">-1</span>]&lt;minl[i+(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>))][j<span class="number">-1</span>])minl[i][j]=minl[i][j<span class="number">-1</span>],pos[i][j]=pos[i][j<span class="number">-1</span>];</span><br><span class="line">            <span class="keyword">else</span> minl[i][j]=minl[i + (<span class="number">1</span> &lt;&lt; (j<span class="number">-1</span>) )][j<span class="number">-1</span>],pos[i][j]=pos[i + (<span class="number">1</span> &lt;&lt; (j<span class="number">-1</span>) )][j<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rmq</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(l&gt;r) swap(l,r);</span><br><span class="line">    <span class="keyword">int</span> k=len[r-l+<span class="number">1</span>];</span><br><span class="line">    <span class="comment">//int k = log2((double)(r-l+1));</span></span><br><span class="line">    <span class="keyword">int</span> mid=r-(<span class="number">1</span>&lt;&lt;k)+<span class="number">1</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(minl[l][k]&lt;=minl[mid][k])<span class="keyword">return</span> pos[l][k];</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> pos[mid][k];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=read();m=read();s=read(); </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i)</span><br><span class="line">    &#123;</span><br><span class="line">      x=read();y=read();</span><br><span class="line">      G[x].push_back(y);</span><br><span class="line">      G[y].push_back(x);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    dfs(s,<span class="number">-1</span>,<span class="number">1</span>);<span class="comment">//求欧拉序列</span></span><br><span class="line">    S_table();<span class="comment">//初始化st表</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        x=read();y=read();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,oula[rmq(start[x],start[y])]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="树剖解法："><a href="#树剖解法：" class="headerlink" title="树剖解法："></a>树剖解法：</h2><p>树剖比Tarjan慢，但比倍增快</p><p>树剖详讲</p><p>树剖是把一棵树按子树大小分为链。树剖基本操作中有一个是求x到y的路径的边权和，或者是所有边权进行修改。我们可以用树剖的思路来写LCA。直接看点x和y是否在一条链上，不在则深度较大者跳到链头的父亲节点处，也就是跳出这条链；在则深度较浅者为LCA。<br>树剖一跳就是一条链，对于n极大的情况就相当于是倍增的再一优化。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;//都是树剖模板操作，就不做多解释了。</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 500005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, root;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>, ch = getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + ch - <span class="string">'0'</span>, ch = getchar();</span><br><span class="line">    <span class="keyword">return</span> x * f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> to, nxt;</span><br><span class="line">    edge()&#123;&#125;</span><br><span class="line">    edge(<span class="keyword">int</span> tt, <span class="keyword">int</span> nn)</span><br><span class="line">    &#123;</span><br><span class="line">        to = tt, nxt = nn;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;e[maxn &lt;&lt; <span class="number">1</span>];</span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> k = <span class="number">0</span>, head[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[k] = edge(v, head[u]);</span><br><span class="line">    head[u] = k++;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> fa[maxn], dep[maxn], size[maxn], son[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs_getson</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    size[u] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = head[u]; ~i; i = e[i].nxt)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v = e[i].to;</span><br><span class="line">        <span class="keyword">if</span>(v == fa[u]) <span class="keyword">continue</span>;</span><br><span class="line">        dep[v] = dep[u] + <span class="number">1</span>;</span><br><span class="line">        fa[v] = u;</span><br><span class="line">        dfs_getson(v);</span><br><span class="line">        size[u] += size[v];</span><br><span class="line">        <span class="keyword">if</span>(size[v] &gt; size[son[u]]) son[u] = v;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> top[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs_rewrite</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> tp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    top[u] = tp;</span><br><span class="line">    <span class="keyword">if</span>(son[u]) dfs_rewrite(son[u], tp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = head[u]; ~i; i = e[i].nxt)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v = e[i].to;</span><br><span class="line">        <span class="keyword">if</span>(v != fa[u] &amp;&amp; v != son[u]) dfs_rewrite(v, v);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ask</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(top[x] != top[y])<span class="comment">//不同则跳</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(dep[top[x]] &gt; dep[top[y]]) swap(x, y);</span><br><span class="line">        y = fa[top[y]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(dep[x] &gt; dep[y]) swap(x, y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, x);<span class="comment">//输出深度较小者</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(head, <span class="number">-1</span>, <span class="keyword">sizeof</span> head);</span><br><span class="line">    n = read(), m = read(), root = read();</span><br><span class="line">    <span class="keyword">int</span> u, v;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        u = read(), v = read();</span><br><span class="line">        add(u, v);</span><br><span class="line">        add(v, u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//树剖初始化</span></span><br><span class="line">    dfs_getson(root);</span><br><span class="line">    dfs_rewrite(root, root);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">    u = read(), v = read();</span><br><span class="line">        ask(u, v);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;@[TOC]&lt;br&gt;&lt;strong&gt;我们通过这个题&lt;a href=&quot;https://www.luogu.com.cn/problem/P3379&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;洛谷P3379 【模板】最近公共祖先来讲LCA&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;LCA介绍&quot;&gt;&lt;a href=&quot;#LCA介绍&quot; class=&quot;headerlink&quot; title=&quot;LCA介绍&quot;&gt;&lt;/a&gt;LCA介绍&lt;/h2&gt;&lt;p&gt;lca是啥？最近公共祖先&lt;br&gt;就是：两个点在这棵树上距离最近的公共祖先节点&lt;br&gt;LCA（x，y）=z，z是x与y的最近公共祖先，（换句话说z的深度要尽可能大）&lt;br&gt;来看一个经典图&lt;br&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20200411230206669.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTc1MzY3,size_16,color_FFFFFF,t_70&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据结构" scheme="http://Jozky.top/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法讲解" scheme="http://Jozky.top/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AE%97%E6%B3%95%E8%AE%B2%E8%A7%A3/"/>
    
    
      <category term="LCA" scheme="http://Jozky.top/tags/LCA/"/>
    
      <category term="倍增" scheme="http://Jozky.top/tags/%E5%80%8D%E5%A2%9E/"/>
    
      <category term="欧拉序" scheme="http://Jozky.top/tags/%E6%AC%A7%E6%8B%89%E5%BA%8F/"/>
    
      <category term="ST表" scheme="http://Jozky.top/tags/ST%E8%A1%A8/"/>
    
      <category term="Tarjan" scheme="http://Jozky.top/tags/Tarjan/"/>
    
      <category term="树链剖分" scheme="http://Jozky.top/tags/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/"/>
    
  </entry>
  
</feed>
